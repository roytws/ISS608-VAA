[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "I will first work through the exercise to gain a clear understanding of the data and objectives. Based on this foundation, I will then explore opportunities to apply visual analytics techniques to uncover insights and enhance data storytelling.\n\n\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, ggrepel, ggthemes, hrbrthemes, patchwork, ggtern, ggplot2)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, ggrepel, ggthemes, hrbrthemes, patchwork, ggtern, ggplot2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-comparison-class-and-subject",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-comparison-class-and-subject",
    "title": "Hands-on Exercise 2",
    "section": "Data Comparison: Class and Subject",
    "text": "Data Comparison: Class and Subject\n\nexam_data_long &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(ENGLISH, MATHS, SCIENCE), names_to = \"Subject\", values_to = \"Score\")\n\nscore_comparison_plot &lt;- ggplot(exam_data_long, aes(x = CLASS, y = Score, fill = Subject)) +\n  geom_boxplot() + \n  facet_wrap(~ Subject, scales = \"free_y\") + \n  labs(title = \"Comparison of Scores by Class and Subject\",\n       x = \"Class\", y = \"Scores\") +\n  theme_linedraw() + \n  coord_cartesian(ylim = c(0, 100)) +\n  theme(legend.position = \"top\")\n\nscore_comparison_plot"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-of-average-scores",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-of-average-scores",
    "title": "Hands-on Exercise 2",
    "section": "Density Plot of Average Scores",
    "text": "Density Plot of Average Scores\n\nexam_data$average_score &lt;- (exam_data$ENGLISH + exam_data$MATHS + exam_data$SCIENCE) / 3\n\nggplot(exam_data, aes(x = average_score)) +\n  geom_density(fill = \"blue\", alpha = 0.5) +\n  labs(title = \"Density Plot of Average Scores\", x = \"Average Score\", y = \"Density\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-by-gender",
    "title": "Hands-on Exercise 2",
    "section": "density plot by gender",
    "text": "density plot by gender\n\nggplot(exam_data, aes(x = average_score, fill = GENDER)) +\n  geom_density(alpha = 0.5) +  # alpha makes it semi-transparent\n  labs(title = \"Density Plot of Average Scores by Gender\", x = \"Average Score\", y = \"Density\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#try-out-patchwork",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#try-out-patchwork",
    "title": "Hands-on Exercise 2",
    "section": "Try out Patchwork",
    "text": "Try out Patchwork\n\nhistogram_plot &lt;- ggplot(exam_data, aes(x = ENGLISH)) + \n  geom_histogram(bins = 20, fill = \"lightblue\", color = \"black\", alpha = 0.7) + \n  labs(title = \"Distribution of English Scores\", x = \"English Score\", y = \"Frequency\") + \n  theme_minimal()\n\n# 2. Scatter plot of MATHS vs SCIENCE scores\nscatter_plot &lt;- ggplot(exam_data, aes(x = MATHS, y = SCIENCE)) + \n  geom_point(color = \"purple\") + \n  geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +\n  labs(title = \"Maths vs Science Scores\", x = \"Math Score\", y = \"Science Score\") +\n  theme_minimal()\n\n# 3. Violin plot of average scores by class\nexam_data$average_score &lt;- (exam_data$ENGLISH + exam_data$MATHS + exam_data$SCIENCE) / 3\nviolin_plot &lt;- ggplot(exam_data, aes(x = CLASS, y = average_score, fill = CLASS)) + \n  geom_violin() +\n  labs(title = \"Average Scores by Class\", x = \"Class\", y = \"Average Score\") + \n  theme_minimal()\n\n# Combine the plots using patchwork\ncombined_plot &lt;- (histogram_plot | scatter_plot) / violin_plot\n\n# Display the combined plot\ncombined_plot\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot-theme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot-theme",
    "title": "Hands-on Exercise 2",
    "section": "Beyond ggplot theme",
    "text": "Beyond ggplot theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_economist() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot-theme-1",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot-theme-1",
    "title": "Hands-on Exercise 2",
    "section": "Beyond ggplot theme",
    "text": "Beyond ggplot theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Exercise 2",
    "section": "Beyond Single Graph",
    "text": "Beyond Single Graph\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  # Replace 'size' with 'linewidth'\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\np3\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-1",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-1",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n\np1 + p2 | p3\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-2",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-2",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-3",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-3",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-4",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-4",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly,patchwork, DT, tidyverse) \n\n\n\n\nexam_data &lt;- read_csv(\"chap03/data/Exam_data.csv\")\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nTo make it easier for users to identify which dot they are hovering over, we enhance the dot’s appearance by changing its size and color during hover.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \ntheme_set(theme_minimal(base_size = 14, base_family = \"Arial\"))\n\np &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = tooltip, data_id = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#2c7fb8\",        # Soft blue fill\n    color = \"white\",         # Dot border\n    alpha = 0.85\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(\n    title = \"Distribution of Maths Scores\",\n    subtitle = \"Each dot represents a student. Hover to see details.\",\n    caption = \"Source: Exam_data.csv\",\n    x = \"Maths Score\",\n    y = NULL\n  ) +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 13, hjust = 0.5),\n    axis.text.x = element_text(size = 12),\n    panel.grid.major.y = element_blank()\n  )\n\n\noptions(ggiraph.tooltip_extra_css = \"pointer-events: none;\")\n\n# Create the interactive widget\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_tooltip(css = \"color: red; font-weight: bold; background-color: #f9f9f9;\n                         border: 1px solid #ccc; padding: 6px 10px;\n                         border-radius: 6px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);\"),\n    opts_hover(css = \"fill:#f03b20;stroke:white;stroke-width:1.5px;\")\n  )\n)\n\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(RACE = fct_reorder(RACE, MATHS, .fun = mean, .desc = FALSE))\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste0(\"Mean Maths Score: \", mean, \"\\n± Standard Error: \", sem)\n}\n\ngg_point &lt;- ggplot(data = exam_data, aes(x = RACE)) +\n  stat_summary(\n    aes(y = MATHS, tooltip = after_stat(tooltip(y, ymax))),\n    fun.data = \"mean_se\",\n    geom = GeomInteractiveCol,\n    width = 0.5,\n    fill = \"lightblue\"\n  ) +\n  stat_summary(\n    aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\",\n    width = 0.2,\n    size = 0.2\n  ) +\n  scale_y_continuous(breaks = seq(0, 100, by = 10)) +\n  labs(\n    title = \"Average Maths Scores by Race\",\n    x = \"Race\",\n    y = \"Maths Score\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14)\n  )\n\ngirafe(\n  ggobj = gg_point,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_hover(css = \"fill:orange;stroke:black;stroke-width:1.5px;\"),\n    opts_tooltip(css = \"background-color:white; color:black; border:1px solid black; padding:5px; border-radius:5px;\")\n  )\n)\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nexam_data &lt;- read_csv(\"chap03/data/Exam_data.csv\")\nclass_summary &lt;- exam_data %&gt;%\n  group_by(CLASS) %&gt;%\n  summarise(\n    mean_score = round(mean(MATHS), 2),\n    min_score = min(MATHS, na.rm = TRUE),\n    max_score = max(MATHS, na.rm = TRUE),\n    count = n(),\n    .groups = \"drop\"\n)\n\n# Join the stats back to main data and add tooltip content\nexam_data &lt;- exam_data %&gt;%\n  left_join(class_summary, by = \"CLASS\") %&gt;%\n  mutate(tooltip_text = paste0(\n    \"Class: \", CLASS, \"\\n\",\n    \"Student Score: \", MATHS, \"\\n\",\n    \"Class Mean: \", mean_score, \"\\n\",\n    \"Min Score: \", min_score, \"\\n\",\n    \"Max Score: \", max_score, \"\\n\",\n    \"Count: \", count\n  ))\n\n# Dotplot with enhanced tooltip\np &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = tooltip_text, data_id = CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#1f77b4\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(\n    title = \"Distribution of Maths Scores\",\n    x = \"Maths Score\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    axis.text.x = element_text(size = 12)\n  )\n\n# Interactive rendering\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6 * 0.618,\n  options = list(\n    opts_hover(css = \"fill: #202020; stroke: white; stroke-width: 1.2px;\"),\n    opts_hover_inv(css = \"opacity: 0.15;\"),\n    opts_tooltip(css = \"background-color: white; color: black; border: 1px solid #ccc; padding: 5px; border-radius: 4px; font-size: 12px;\")\n  )\n)\n\n\n\n\n\n##3.6.7 Coordinated Multiple Views with ggiraph\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(\n    total_score = MATHS + ENGLISH + SCIENCE,\n    tooltip_text = paste0(\n      \"Maths: \", MATHS, \"\\n\",\n      \"English: \", ENGLISH, \"\\n\",\n      \"Science: \", SCIENCE, \"\\n\",\n      \"Total: \", total_score, \" / 300\"\n    )\n  )\n\n# Step 2: Maths Plot\np1 &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#1f77b4\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"Maths Score\", x = \"MATHS\") +\n  theme_minimal()\n\n# Step 3: English Plot\np2 &lt;- ggplot(data = exam_data, aes(x = ENGLISH)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#2ca02c\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"English Score\", x = \"ENGLISH\") +\n  theme_minimal()\n\n# Step 4: Science Plot\np3 &lt;- ggplot(data = exam_data, aes(x = SCIENCE)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#ff7f0e\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"Science Score\", x = \"SCIENCE\") +\n  theme_minimal()\n\n# Step 5: Combine the 3 plots vertically\ncombined_plot &lt;- p1 / p2 / p3\n\n# Step 6: Render as interactive graphic\ngirafe(\n  code = print(combined_plot),\n  width_svg = 9,\n  height_svg = 5,\n  options = list(\n    opts_hover(css = \"fill: red; stroke: black; stroke-width: 1.5px;\"),\n    opts_hover_inv(css = \"opacity: 0.2;\"),\n    opts_tooltip(css = \"background-color: white; color: black; border: 1px solid #ccc; padding: 6px; border-radius: 5px; font-size: 12px;\")\n  )\n)\n\n\n\n\n\n##3.7 Interactive Data Visualisation - plotly methods!\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(\n    TOTAL = MATHS + ENGLISH + SCIENCE,\n    tooltip_text = paste0(\n      \"Class: \", CLASS, \"&lt;br&gt;\",\n      \"Maths: \", MATHS, \"&lt;br&gt;\",\n      \"English: \", ENGLISH, \"&lt;br&gt;\",\n      \"Science: \", SCIENCE, \"&lt;br&gt;\",\n      \"Total: \", TOTAL, \" / 300\"\n    )\n  )\n\nplot_ly(\n  data = exam_data,\n  x = ~ENGLISH,\n  y = ~MATHS,\n  type = \"scatter\",\n  mode = \"markers\",\n  color = ~CLASS,\n  colors = \"Set2\",  # or try \"Paired\", \"Dark2\"\n  text = ~tooltip_text,\n  hoverinfo = \"text\",\n  marker = list(\n    size = 10,\n    opacity = 0.7,\n    line = list(width = 1, color = \"#000000\")\n  )\n) %&gt;%\n  layout(\n    title = list(text = \"English vs Maths by Class\", x = 0.05),\n    xaxis = list(title = \"English Score\", range = c(0, 100)),\n    yaxis = list(title = \"Maths Score\", range = c(0, 100)),\n    legend = list(title = list(text = \"&lt;b&gt;Class&lt;/b&gt;\"))\n  )\n\n\n\n\n\n##3.8 Interactive Data Visualisation - crosstalk methods!\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n###Try to make the table fit\n\nd &lt;- highlight_key(exam_data)\n\n# 1. Interactive ggplotly plot\np &lt;- ggplot(d, aes(ENGLISH, MATHS)) +\n  geom_point(size = 2, alpha = 0.7) +\n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_minimal()\n\ngg &lt;- highlight(ggplotly(p), \"plotly_selected\")\n\n# 2. Enhanced datatable\ndata_table &lt;- DT::datatable(\n  d,\n  options = list(\n    pageLength = 20,\n    scrollY = \"600px\",\n    autoWidth = TRUE,\n    dom = 'Bfrtip'\n  ),\n  class = \"stripe hover compact\",\n  rownames = FALSE\n)\n\n# 3. Arrange with wider proportions\ncrosstalk::bscols(\n  widths = c(5, 7),  # Give plot more breathing room\n  gg,\n  data_table\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#4 Programming Animated Statistical Graphics with R\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n##import\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"chap03/data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\n##Animated Data Visualisation: gganimate methods\n###Static bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n###Animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n##4.4 Animated Data Visualisation: plotly\n###4.4.1 Building an animated bubble plot: ggplotly() method\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n###4.4.2 Building an animated bubble plot: plot_ly() method\n\nbp &lt;- suppressWarnings({\n  globalPop %&gt;%\n    plot_ly(\n      x = ~Old, \n      y = ~Young, \n      size = ~Population, \n      color = ~Continent,\n      sizes = c(2, 100),\n      frame = ~Year, \n      text = ~Country, \n      hoverinfo = \"text\",\n      type = 'scatter',\n      mode = 'markers'\n    ) %&gt;%\n    layout(showlegend = FALSE)\n})\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"chap03/data/Exam_data.csv\")\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nTo make it easier for users to identify which dot they are hovering over, we enhance the dot’s appearance by changing its size and color during hover.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \ntheme_set(theme_minimal(base_size = 14, base_family = \"Arial\"))\n\np &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = tooltip, data_id = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#2c7fb8\",        # Soft blue fill\n    color = \"white\",         # Dot border\n    alpha = 0.85\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(\n    title = \"Distribution of Maths Scores\",\n    subtitle = \"Each dot represents a student. Hover to see details.\",\n    caption = \"Source: Exam_data.csv\",\n    x = \"Maths Score\",\n    y = NULL\n  ) +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 13, hjust = 0.5),\n    axis.text.x = element_text(size = 12),\n    panel.grid.major.y = element_blank()\n  )\n\n\noptions(ggiraph.tooltip_extra_css = \"pointer-events: none;\")\n\n# Create the interactive widget\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_tooltip(css = \"color: red; font-weight: bold; background-color: #f9f9f9;\n                         border: 1px solid #ccc; padding: 6px 10px;\n                         border-radius: 6px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);\"),\n    opts_hover(css = \"fill:#f03b20;stroke:white;stroke-width:1.5px;\")\n  )\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "tooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(RACE = fct_reorder(RACE, MATHS, .fun = mean, .desc = FALSE))\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste0(\"Mean Maths Score: \", mean, \"\\n± Standard Error: \", sem)\n}\n\ngg_point &lt;- ggplot(data = exam_data, aes(x = RACE)) +\n  stat_summary(\n    aes(y = MATHS, tooltip = after_stat(tooltip(y, ymax))),\n    fun.data = \"mean_se\",\n    geom = GeomInteractiveCol,\n    width = 0.5,\n    fill = \"lightblue\"\n  ) +\n  stat_summary(\n    aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\",\n    width = 0.2,\n    size = 0.2\n  ) +\n  scale_y_continuous(breaks = seq(0, 100, by = 10)) +\n  labs(\n    title = \"Average Maths Scores by Race\",\n    x = \"Race\",\n    y = \"Maths Score\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14)\n  )\n\ngirafe(\n  ggobj = gg_point,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_hover(css = \"fill:orange;stroke:black;stroke-width:1.5px;\"),\n    opts_tooltip(css = \"background-color:white; color:black; border:1px solid black; padding:5px; border-radius:5px;\")\n  )\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "p &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nexam_data &lt;- read_csv(\"chap03/data/Exam_data.csv\")\nclass_summary &lt;- exam_data %&gt;%\n  group_by(CLASS) %&gt;%\n  summarise(\n    mean_score = round(mean(MATHS), 2),\n    min_score = min(MATHS, na.rm = TRUE),\n    max_score = max(MATHS, na.rm = TRUE),\n    count = n(),\n    .groups = \"drop\"\n)\n\n# Join the stats back to main data and add tooltip content\nexam_data &lt;- exam_data %&gt;%\n  left_join(class_summary, by = \"CLASS\") %&gt;%\n  mutate(tooltip_text = paste0(\n    \"Class: \", CLASS, \"\\n\",\n    \"Student Score: \", MATHS, \"\\n\",\n    \"Class Mean: \", mean_score, \"\\n\",\n    \"Min Score: \", min_score, \"\\n\",\n    \"Max Score: \", max_score, \"\\n\",\n    \"Count: \", count\n  ))\n\n# Dotplot with enhanced tooltip\np &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = tooltip_text, data_id = CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#1f77b4\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(\n    title = \"Distribution of Maths Scores\",\n    x = \"Maths Score\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    axis.text.x = element_text(size = 12)\n  )\n\n# Interactive rendering\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6 * 0.618,\n  options = list(\n    opts_hover(css = \"fill: #202020; stroke: white; stroke-width: 1.2px;\"),\n    opts_hover_inv(css = \"opacity: 0.15;\"),\n    opts_tooltip(css = \"background-color: white; color: black; border: 1px solid #ccc; padding: 5px; border-radius: 4px; font-size: 12px;\")\n  )\n)\n\n\n\n\n\n##3.6.7 Coordinated Multiple Views with ggiraph\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(\n    total_score = MATHS + ENGLISH + SCIENCE,\n    tooltip_text = paste0(\n      \"Maths: \", MATHS, \"\\n\",\n      \"English: \", ENGLISH, \"\\n\",\n      \"Science: \", SCIENCE, \"\\n\",\n      \"Total: \", total_score, \" / 300\"\n    )\n  )\n\n# Step 2: Maths Plot\np1 &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#1f77b4\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"Maths Score\", x = \"MATHS\") +\n  theme_minimal()\n\n# Step 3: English Plot\np2 &lt;- ggplot(data = exam_data, aes(x = ENGLISH)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#2ca02c\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"English Score\", x = \"ENGLISH\") +\n  theme_minimal()\n\n# Step 4: Science Plot\np3 &lt;- ggplot(data = exam_data, aes(x = SCIENCE)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#ff7f0e\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"Science Score\", x = \"SCIENCE\") +\n  theme_minimal()\n\n# Step 5: Combine the 3 plots vertically\ncombined_plot &lt;- p1 / p2 / p3\n\n# Step 6: Render as interactive graphic\ngirafe(\n  code = print(combined_plot),\n  width_svg = 9,\n  height_svg = 5,\n  options = list(\n    opts_hover(css = \"fill: red; stroke: black; stroke-width: 1.5px;\"),\n    opts_hover_inv(css = \"opacity: 0.2;\"),\n    opts_tooltip(css = \"background-color: white; color: black; border: 1px solid #ccc; padding: 6px; border-radius: 5px; font-size: 12px;\")\n  )\n)\n\n\n\n\n\n##3.7 Interactive Data Visualisation - plotly methods!\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(\n    TOTAL = MATHS + ENGLISH + SCIENCE,\n    tooltip_text = paste0(\n      \"Class: \", CLASS, \"&lt;br&gt;\",\n      \"Maths: \", MATHS, \"&lt;br&gt;\",\n      \"English: \", ENGLISH, \"&lt;br&gt;\",\n      \"Science: \", SCIENCE, \"&lt;br&gt;\",\n      \"Total: \", TOTAL, \" / 300\"\n    )\n  )\n\nplot_ly(\n  data = exam_data,\n  x = ~ENGLISH,\n  y = ~MATHS,\n  type = \"scatter\",\n  mode = \"markers\",\n  color = ~CLASS,\n  colors = \"Set2\",  # or try \"Paired\", \"Dark2\"\n  text = ~tooltip_text,\n  hoverinfo = \"text\",\n  marker = list(\n    size = 10,\n    opacity = 0.7,\n    line = list(width = 1, color = \"#000000\")\n  )\n) %&gt;%\n  layout(\n    title = list(text = \"English vs Maths by Class\", x = 0.05),\n    xaxis = list(title = \"English Score\", range = c(0, 100)),\n    yaxis = list(title = \"Maths Score\", range = c(0, 100)),\n    legend = list(title = list(text = \"&lt;b&gt;Class&lt;/b&gt;\"))\n  )\n\n\n\n\n\n##3.8 Interactive Data Visualisation - crosstalk methods!\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n###Try to make the table fit\n\nd &lt;- highlight_key(exam_data)\n\n# 1. Interactive ggplotly plot\np &lt;- ggplot(d, aes(ENGLISH, MATHS)) +\n  geom_point(size = 2, alpha = 0.7) +\n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_minimal()\n\ngg &lt;- highlight(ggplotly(p), \"plotly_selected\")\n\n# 2. Enhanced datatable\ndata_table &lt;- DT::datatable(\n  d,\n  options = list(\n    pageLength = 20,\n    scrollY = \"600px\",\n    autoWidth = TRUE,\n    dom = 'Bfrtip'\n  ),\n  class = \"stripe hover compact\",\n  rownames = FALSE\n)\n\n# 3. Arrange with wider proportions\ncrosstalk::bscols(\n  widths = c(5, 7),  # Give plot more breathing room\n  gg,\n  data_table\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#4 Programming Animated Statistical Graphics with R\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n##import\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"chap03/data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\n##Animated Data Visualisation: gganimate methods\n###Static bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n###Animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n##4.4 Animated Data Visualisation: plotly\n###4.4.1 Building an animated bubble plot: ggplotly() method\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n###4.4.2 Building an animated bubble plot: plot_ly() method\n\nbp &lt;- suppressWarnings({\n  globalPop %&gt;%\n    plot_ly(\n      x = ~Old, \n      y = ~Young, \n      size = ~Population, \n      color = ~Continent,\n      sizes = c(2, 100),\n      frame = ~Year, \n      text = ~Country, \n      hoverinfo = \"text\",\n      type = 'scatter',\n      mode = 'markers'\n    ) %&gt;%\n    layout(showlegend = FALSE)\n})\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse)\n\n\n\n\n\nexam  &lt;- read_csv(\"chap04/data/Exam_data.csv\")\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\nEdit the code so that it will not show the warning error\n\nReplace stat(x) with after_stat(x)\nBandwidth = 2\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = after_stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 2 \n  ) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-packages",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "exam  &lt;- read_csv(\"chap04/data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-ridgeline-graph-ggridges-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-ridgeline-graph-ggridges-method",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "ggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#varying-fill-colors-along-the-x-axis",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#varying-fill-colors-along-the-x-axis",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "Edit the code so that it will not show the warning error\n\nReplace stat(x) with after_stat(x)\nBandwidth = 2\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = after_stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 2 \n  ) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plots-with-quantile-lines",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plots-with-quantile-lines",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "ggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plots-with-quantile-lines-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plots-with-quantile-lines-1",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "ggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "ggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-package",
    "title": "Hands-on Exercise 4",
    "section": "Load Package",
    "text": "Load Package\n\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on Exercise 4",
    "section": "Significant Test of Correlation: ggscatterstats()",
    "text": "Significant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on Exercise 4",
    "section": "Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "Significant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-on Exercise 4",
    "section": "Plotting standard error bars of point estimates",
    "text": "Plotting standard error bars of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-on Exercise 4",
    "section": "Plotting confidence interval of point estimates",
    "text": "Plotting confidence interval of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "Visualizing the uncertainty of point estimates with interactive error bars\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"90%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\npacman::p_load(gganimate, ragg, ungeviz)\n\n\n# anim &lt;- ggplot(data = exam, \n#        aes(x = factor(RACE), y = MATHS)) +\n#   geom_point(position = position_jitter(height = 0.3, width = 0.05), \n#              size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n#   geom_hpline(data = sampler(25, group = RACE), \n#               height = 0.6, color = \"#D55E00\") +\n#   theme_bw() + \n#   transition_states(.draw, transition_length = 1, state_length = 3)\n# \n# animate(anim, width = 600, height = 400, renderer = magick_renderer())\n# anim_save(\"chap04/images/math_scores.gif\", animation = last_animation())\n\n\n\n\nMath Scores Animation"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-1",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods: Makeover 1",
    "text": "FunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-2",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods: Makeover 2",
    "text": "FunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative \n  Total Number of COVID-19 Positive Cases\",    \n  x_label = \"Cumulative COVID-19 Positive Cases\", \n  y_label = \"Cumulative Fatality Rate\"  \n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "title": "Hands-on Exercise 4",
    "section": "Computing the basic derived fields",
    "text": "Computing the basic derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on Exercise 4",
    "section": "Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "Calculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "title": "Hands-on Exercise 4",
    "section": "Plotting a static funnel plot",
    "text": "Plotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on Exercise 4",
    "section": "Interactive Funnel Plot: plotly + ggplot2",
    "text": "Interactive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "Code\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-time-and-review",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-time-and-review",
    "title": "Hands-on Exercise 5",
    "section": "Wrangling time and review",
    "text": "Wrangling time and review\n\n\nCode\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-attributes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-attributes",
    "title": "Hands-on Exercise 5",
    "section": "Wrangling attributes",
    "text": "Wrangling attributes\n\n\nCode\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n  summarise(Weight = n(), .groups = \"drop\") %&gt;%\n  filter(source != target, Weight &gt; 1)\n\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…\n\n\n\n\nCode\nGAStech_edges_vis &lt;- GAStech_edges_aggregated %&gt;%\n  rename(from = source, to = target)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "title": "Hands-on Exercise 5",
    "section": "Changing the active object",
    "text": "Changing the active object\n\n\nCode\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Saturday      13\n 2    41    43 Monday        11\n 3    35    31 Tuesday       10\n 4    40    41 Monday        10\n 5    40    43 Monday        10\n 6    36    32 Sunday         9\n 7    40    43 Saturday       9\n 8    41    40 Monday         9\n 9    19    15 Wednesday      8\n10    35    38 Tuesday        8\n# ℹ 1,362 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "title": "Hands-on Exercise 5",
    "section": "Plotting a basic network graph",
    "text": "Plotting a basic network graph\n\n\nCode\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\nUsing \"stress\" as default layout"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "title": "Hands-on Exercise 5",
    "section": "Changing the default network graph theme",
    "text": "Changing the default network graph theme\n\n\nCode\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\n\nUsing \"stress\" as default layout\n\n\nCode\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "title": "Hands-on Exercise 5",
    "section": "Changing the coloring of the plot",
    "text": "Changing the coloring of the plot\n\n\nCode\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\n\nUsing \"stress\" as default layout\n\n\nCode\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "title": "Hands-on Exercise 5",
    "section": "Fruchterman and Reingold layout",
    "text": "Fruchterman and Reingold layout\n\n\nCode\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "title": "Hands-on Exercise 5",
    "section": "Modifying network nodes",
    "text": "Modifying network nodes\n\n\nCode\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "title": "Hands-on Exercise 5",
    "section": "Modifying edges",
    "text": "Modifying edges\n\n\nCode\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_edges()",
    "text": "Working with facet_edges()\n\n\nCode\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-1",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_edges()",
    "text": "Working with facet_edges()\n\n\nCode\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "title": "Hands-on Exercise 5",
    "section": "A framed facet graph",
    "text": "A framed facet graph\n\n\nCode\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "title": "Hands-on Exercise 5",
    "section": "Working with facet_nodes()",
    "text": "Working with facet_nodes()\n\n\nCode\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "title": "Hands-on Exercise 5",
    "section": "Computing centrality indices",
    "text": "Computing centrality indices\n\n\nCode\ng &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "title": "Hands-on Exercise 5",
    "section": "Visualising network metrics",
    "text": "Visualising network metrics\n\n\nCode\nGAStech_graph &lt;- GAStech_graph %&gt;%\n  mutate(betweenness = centrality_betweenness())\n\ng &lt;- ggraph(GAStech_graph, layout = \"fr\") + \n  geom_edge_link(aes(width = Weight), alpha = 0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, size = betweenness)) +\n  theme_graph()\n\ng\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\nCode\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(\n    group_edge_betweenness(\n      weights = Weight, \n      directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(\n    aes(\n      width=Weight), \n    alpha=0.2) +\n  scale_edge_width(\n    range = c(0.1, 5)) +\n  geom_node_point(\n    aes(colour = community))  \n\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `community = as.factor(group_edge_betweenness(weights = Weight,\n  directed = TRUE))`.\nCaused by warning in `cluster_edge_betweenness()`:\n! At vendor/cigraph/src/community/edge_betweenness.c:503 : Membership vector will be selected based on the highest modularity score.\n\n\nCode\ng + theme_graph()\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "title": "Hands-on Exercise 5",
    "section": "Visualising Community",
    "text": "Visualising Community\n\n\nCode\ng &lt;- GAStech_graph %&gt;%\n  activate(nodes) %&gt;%\n  mutate(community = as.factor(\n    group_optimal(weights = Weight)),\n         betweenness_measure = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_mark_hull(\n    aes(x, y, \n        group = community, \n        fill = community),  \n    alpha = 0.2,  \n    expand = unit(0.3, \"cm\"),  # Expand\n    radius = unit(0.3, \"cm\")  # Smoothness\n  ) + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(fill = Department,\n                      size = betweenness_measure),\n                      color = \"black\",\n                      shape = 21)\n  \ng + theme_graph()\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "title": "Hands-on Exercise 5",
    "section": "Working with layout",
    "text": "Working with layout\n\n\nCode\nvisNetwork(GAStech_nodes, GAStech_edges_vis) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#drop-down-list-by-id",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#drop-down-list-by-id",
    "title": "Hands-on Exercise 5",
    "section": "drop down list by id",
    "text": "drop down list by id\n\n\nCode\nGAStech_edges_vis &lt;- GAStech_edges_aggregated %&gt;%\n  rename(from = source, to = target)\n\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department)\n\nGAStech_nodes_vis &lt;- GAStech_nodes %&gt;%\n  mutate(title = paste0(\"&lt;b&gt;\", label, \"&lt;/b&gt;&lt;br&gt;\", group, \"&lt;br&gt;\", Title))\n\n\n\n\nCode\nvisNetwork(GAStech_nodes_vis, GAStech_edges_vis) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\") %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE)\n\n\n\n\n\n\n\n\nCode\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated %&gt;%\n             rename(from = source, to = target)) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\nCode\nvisNetwork(GAStech_nodes, GAStech_edges_vis) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "title": "Hands-on Exercise 5",
    "section": "Interactivity",
    "text": "Interactivity\n\n\nCode\nGAStech_edges_vis &lt;- GAStech_edges_aggregated %&gt;%\n  rename(from = source, to = target)\n\nvisNetwork(GAStech_nodes, GAStech_edges_vis) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "Code\npacman::p_load(scales, viridis, lubridate, ggthemes,\n               gridExtra, readxl, knitr, data.table,\n               CGPfunctions, ggHoriPlot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#examine-data-structure",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#examine-data-structure",
    "title": "Hands-on Exercise 6",
    "section": "Examine Data Structure",
    "text": "Examine Data Structure\n\n\nCode\nkable(head(attacks))\n\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-multiple-calendar-heatmaps",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-multiple-calendar-heatmaps",
    "title": "Hands-on Exercise 6",
    "section": "Plotting Multiple Calendar Heatmaps",
    "text": "Plotting Multiple Calendar Heatmaps\n\n\nCode\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\n\n\n\nCode\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plot-multiple-calender-heatmap",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plot-multiple-calender-heatmap",
    "title": "Hands-on Exercise 6",
    "section": "plot multiple calender heatmap",
    "text": "plot multiple calender heatmap\n\n\nCode\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#deriving-month-and-year-fields",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#deriving-month-and-year-fields",
    "title": "Hands-on Exercise 6",
    "section": "Deriving month and year fields",
    "text": "Deriving month and year fields\n\n\nCode\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#extracting-the-target-country",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#extracting-the-target-country",
    "title": "Hands-on Exercise 6",
    "section": "Extracting the target country",
    "text": "Extracting the target country\n\n\nCode\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#computing-year-average-arrivals-by-month",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#computing-year-average-arrivals-by-month",
    "title": "Hands-on Exercise 6",
    "section": "Computing year average arrivals by month",
    "text": "Computing year average arrivals by month\n\n\nCode\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-the-cycle-plot",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-the-cycle-plot",
    "title": "Hands-on Exercise 6",
    "section": "Plotting the cycle plot",
    "text": "Plotting the cycle plot\n\n\nCode\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#to-plot-better-and-clearer",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#to-plot-better-and-clearer",
    "title": "Hands-on Exercise 6",
    "section": "to plot better and clearer",
    "text": "to plot better and clearer\n\n\nCode\nVietnam$Date &lt;- as.Date(paste(Vietnam$year, Vietnam$month, \"01\", sep = \"-\"), format = \"%Y-%B-%d\")\n\nggplot() + \n  geom_line(data = Vietnam,\n            aes(x = Date, y = `Vietnam`, group = month),\n            colour = \"black\") +\n  geom_hline(data = hline.data,\n             aes(yintercept = avgvalue),\n             linetype = 6,\n             colour = \"red\",\n             size = 0.5) +\n  facet_wrap(~month, ncol = 3) +  # More flexible layout than facet_grid\n  scale_x_date(date_breaks = \"2 years\", date_labels = \"%Y\") +  # Show more x labels\n  labs(title = \"Visitor arrivals from Vietnam by air, Jan 2010–Dec 2019\",\n       x = \"\", y = \"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\") +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 7),\n    strip.text = element_text(face = \"bold\")\n  )\n\n\nWarning: Removed 10 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-import",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-import",
    "title": "Hands-on Exercise 6",
    "section": "Data Import",
    "text": "Data Import\n\n\nCode\nrice &lt;- read_csv(\"chap06/data/rice.csv\")\n\n\nRows: 550 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Country\ndbl (3): Year, Yield, Production\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-the-slopegraph",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-the-slopegraph",
    "title": "Hands-on Exercise 6",
    "section": "Plotting the slopegraph",
    "text": "Plotting the slopegraph\n\n\nCode\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Dr. Kam Tin Seong\")\n\n\n\nConverting 'Year' to an ordered factor"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/chap08/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/chap08/data/geospatial/MPSZ-2019.html",
    "title": "ISS608-VAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "Hands-on Exercise 8",
    "section": "",
    "text": "Code\npacman::p_load(sf, tmap, tidyverse)\n\n\n\n\n\n\n\nCode\nmpsz &lt;- st_read(dsn = \"chap08/data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\roytws\\ISS608-VAA\\Hands-on_Ex\\Hands-on_Ex08\\chap08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nCode\nmpsz\n\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\n\n\nCode\npopdata &lt;- read_csv(\"chap08/data/aspatial/respopagesextod2011to2020.csv\")\n\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\n\nCode\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\nCode\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(across(c(PA, SZ), toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nwrite_rds(mpsz_pop2020, \"chap08/data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#use-package",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#use-package",
    "title": "Hands-on Exercise 8",
    "section": "",
    "text": "Code\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#import-dataset",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#import-dataset",
    "title": "Hands-on Exercise 8",
    "section": "",
    "text": "Code\nmpsz &lt;- st_read(dsn = \"chap08/data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\roytws\\ISS608-VAA\\Hands-on_Ex\\Hands-on_Ex08\\chap08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nCode\nmpsz\n\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-attribute-data-into-r",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#importing-attribute-data-into-r",
    "title": "Hands-on Exercise 8",
    "section": "",
    "text": "Code\npopdata &lt;- read_csv(\"chap08/data/aspatial/respopagesextod2011to2020.csv\")\n\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-preparation",
    "title": "Hands-on Exercise 8",
    "section": "",
    "text": "Code\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#joining-the-attribute-data-and-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#joining-the-attribute-data-and-geospatial-data",
    "title": "Hands-on Exercise 8",
    "section": "",
    "text": "Code\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(across(c(PA, SZ), toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nwrite_rds(mpsz_pop2020, \"chap08/data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-a-choropleth-map-by-using-tmaps-elements",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-a-choropleth-map-by-using-tmaps-elements",
    "title": "Hands-on Exercise 8",
    "section": "Creating a choropleth map by using tmap’s elements",
    "text": "Creating a choropleth map by using tmap’s elements\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n[plot mode] fit legend/component: Some legend items or map compoments do not\nfit well, and are therefore rescaled.\nℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-base-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-base-map",
    "title": "Hands-on Exercise 8",
    "section": "Drawing a base map",
    "text": "Drawing a base map\n\n\nCode\ntm_shape(mpsz_pop2020) +\n  tm_polygons()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-choropleth-map-using-tm_polygons",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-choropleth-map-using-tm_polygons",
    "title": "Hands-on Exercise 8",
    "section": "Drawing a choropleth map using tm_polygons()",
    "text": "Drawing a choropleth map using tm_polygons()\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-choropleth-map-using-tm_fill-and-tm_border",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-a-choropleth-map-using-tm_fill-and-tm_border",
    "title": "Hands-on Exercise 8",
    "section": "Drawing a choropleth map using tm_fill() and *tm_border()**",
    "text": "Drawing a choropleth map using tm_fill() and *tm_border()**\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\") +\n  tm_borders(lwd = 0.01,  \n             fill_alpha = 0.1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-classification-methods-of-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-classification-methods-of-tmap",
    "title": "Hands-on Exercise 8",
    "section": "Data classification methods of tmap",
    "text": "Data classification methods of tmap\n\nPlotting choropleth maps with built-in classification methods\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"equal\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\nPlotting choropleth map with custome break\n\n\nCode\nsummary(mpsz_pop2020$DEPENDENCY)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7867  0.8585  0.8763 19.0000      92 \n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n\n\n[v3-&gt;v4] `tm_tm_polygons()`: migrate the argument(s) related to the scale of\nthe visual variable `fill` namely 'breaks' to fill.scale = tm_scale(&lt;HERE&gt;).\n\n\nWarning: Values have found that are higher than the highest break. They are\nassigned to the highest interval\n\n\n\n\n\n\n\nColour Scheme\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"-brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\nMap Legend\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5,\n        values = \"brewer.greens\"),\n      fill.legend = tm_legend(\n        title = \"Dependency ratio\")) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\")\n\n\n\n\n\n\n\nMap style\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n\n\n[v3-&gt;v4] `tm_fill()`: instead of `style = \"quantile\"`, use fill.scale =\n`tm_scale_intervals()`.\nℹ Migrate the argument(s) 'style', 'palette' (rename to 'values') to\n  'tm_scale_intervals(&lt;HERE&gt;)'\n[v3-&gt;v4] `tm_borders()`: use 'fill' for the fill color of polygons/symbols\n(instead of 'col'), and 'col' for the outlines (instead of 'border.col').\n[v3-&gt;v4] `tm_borders()`: use `fill_alpha` instead of `alpha`.\nstyle set to \"classic\"\n\nother available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"watercolor\"\n\ntmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"\n\nMultiple palettes called \"greens\" found: \"brewer.greens\", \"matplotlib.greens\". The first one, \"brewer.greens\", is returned.\n\n[cols4all] color palettes: use palettes from the R package cols4all. Run\n`cols4all::c4a_gui()` to explore them. The old palette name \"-Greens\" is named\n\"greens\" (in long format \"brewer.greens\")\n\n\n\n\n\n\n\nCartographic Furniture\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\nCode\ntmap_style(\"white\")\n\n\nstyle set to \"white\" (tmap default)\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\"\n\n\ntmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\""
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-small-multiple-choropleth-maps",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-small-multiple-choropleth-maps",
    "title": "Hands-on Exercise 8",
    "section": "Drawing Small Multiple Choropleth Maps",
    "text": "Drawing Small Multiple Choropleth Maps\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n\n\n[v3-&gt;v4] `tm_fill()`: instead of `style = \"equal\"`, use fill.scale =\n`tm_scale_intervals()`.\nℹ Migrate the argument(s) 'style', 'palette' (rename to 'values') to\n  'tm_scale_intervals(&lt;HERE&gt;)'\n[v3-&gt;v4] `tm_borders()`: use `fill_alpha` instead of `alpha`.\nstyle set to \"white\" (tmap default)\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\"\n\ntmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"\n\n[cols4all] color palettes: use palettes from the R package cols4all. Run\n`cols4all::c4a_gui()` to explore them. The old palette name \"Blues\" is named\n\"brewer.blues\"\nMultiple palettes called \"blues\" found: \"brewer.blues\", \"matplotlib.blues\". The first one, \"brewer.blues\", is returned.\n\nMultiple palettes called \"blues\" found: \"brewer.blues\", \"matplotlib.blues\". The first one, \"brewer.blues\", is returned.\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n\n\n[v3-&gt;v4] `tm_polygons()`: instead of `style = \"equal\"`, use fill.scale =\n`tm_scale_intervals()`.\nℹ Migrate the argument(s) 'style', 'palette' (rename to 'values') to\n  'tm_scale_intervals(&lt;HERE&gt;)'\nFor small multiples, specify a 'tm_scale_' for each multiple, and put them in a\nlist: 'fill'.scale = list(&lt;scale1&gt;, &lt;scale2&gt;, ...)'\n[cols4all] color palettes: use palettes from the R package cols4all. Run\n`cols4all::c4a_gui()` to explore them. The old palette name \"Blues\" is named\n\"brewer.blues\"\nMultiple palettes called \"blues\" found: \"brewer.blues\", \"matplotlib.blues\". The first one, \"brewer.blues\", is returned.\n\nMultiple palettes called \"blues\" found: \"brewer.blues\", \"matplotlib.blues\". The first one, \"brewer.blues\", is returned."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#by-defining-a-group-by-variable-in-tm_facets",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#by-defining-a-group-by-variable-in-tm_facets",
    "title": "Hands-on Exercise 8",
    "section": "By defining a group-by variable in tm_facets()",
    "text": "By defining a group-by variable in tm_facets()\n\n\nCode\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n\n\n[v3-&gt;v4] `tm_fill()`: instead of `style = \"quantile\"`, use fill.scale =\n`tm_scale_intervals()`.\nℹ Migrate the argument(s) 'style', 'palette' (rename to 'values') to\n  'tm_scale_intervals(&lt;HERE&gt;)'\n[v3-&gt;v4] `tm_borders()`: use `fill_alpha` instead of `alpha`.\n[cols4all] color palettes: use palettes from the R package cols4all. Run\n`cols4all::c4a_gui()` to explore them. The old palette name \"Blues\" is named\n\"brewer.blues\"\nMultiple palettes called \"blues\" found: \"brewer.blues\", \"matplotlib.blues\". The first one, \"brewer.blues\", is returned."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#by-creating-multiple-stand-alone-maps-with-tmap_arrange",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#by-creating-multiple-stand-alone-maps-with-tmap_arrange",
    "title": "Hands-on Exercise 8",
    "section": "By creating multiple stand-alone maps with tmap_arrange()",
    "text": "By creating multiple stand-alone maps with tmap_arrange()\n\n\nCode\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\n\n\n\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n\n\n[v3-&gt;v4] `tm_polygons()`: instead of `style = \"quantile\"`, use fill.scale =\n`tm_scale_intervals()`.\nℹ Migrate the argument(s) 'style', 'palette' (rename to 'values') to\n  'tm_scale_intervals(&lt;HERE&gt;)'\n\n\nCode\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n[cols4all] color palettes: use palettes from the R package cols4all. Run\n`cols4all::c4a_gui()` to explore them. The old palette name \"Blues\" is named\n\"brewer.blues\"\nMultiple palettes called \"blues\" found: \"brewer.blues\", \"matplotlib.blues\". The first one, \"brewer.blues\", is returned.\n\n[cols4all] color palettes: use palettes from the R package cols4all. Run\n`cols4all::c4a_gui()` to explore them. The old palette name \"Blues\" is named\n\"brewer.blues\"\nMultiple palettes called \"blues\" found: \"brewer.blues\", \"matplotlib.blues\". The first one, \"brewer.blues\", is returned."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-a-sf-data-frame-from-an-aspatial-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-a-sf-data-frame-from-an-aspatial-data-frame",
    "title": "Hands-on Exercise 8",
    "section": "Creating a sf data frame from an aspatial data frame",
    "text": "Creating a sf data frame from an aspatial data frame\n\n\nCode\nsgpools_sf &lt;- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\n\n\n\n\nCode\nlist(sgpools_sf)\n\n\n[[1]]\nSimple feature collection with 306 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 7844.194 ymin: 26525.7 xmax: 45176.57 ymax: 47987.13\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 306 × 6\n   NAME                         ADDRESS POSTCODE `OUTLET TYPE` `Gp1Gp2 Winnings`\n * &lt;chr&gt;                        &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Marina Bay Sands)  2 Bayf…    18972 Branch                        5\n 2 Livewire (Resorts World Sen… 26 Sen…    98138 Branch                       11\n 3 SportsBuzz (Kranji)          Lotus …   738078 Branch                        0\n 4 SportsBuzz (PoMo)            1 Sele…   188306 Branch                       44\n 5 Prime Serangoon North        Blk 54…   552542 Branch                        0\n 6 Singapore Pools Woodlands C… 1A Woo…   731001 Branch                        3\n 7 Singapore Pools 64 Circuit … Blk 64…   370064 Branch                       17\n 8 Singapore Pools 88 Circuit … Blk 88…   370088 Branch                       16\n 9 Singapore Pools Anchorvale … Blk 30…   540308 Branch                       21\n10 Singapore Pools Ang Mo Kio … Blk 20…   560202 Branch                       25\n# ℹ 296 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-proportional-symbol-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-proportional-symbol-map",
    "title": "Hands-on Exercise 8",
    "section": "Drawing Proportional Symbol Map",
    "text": "Drawing Proportional Symbol Map\n\n\nCode\ntmap_mode(\"view\")\n\n\nℹ tmap mode set to \"view\"."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#it-all-started-with-an-interactive-point-symbol-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#it-all-started-with-an-interactive-point-symbol-map",
    "title": "Hands-on Exercise 8",
    "section": "It all started with an interactive point symbol map",
    "text": "It all started with an interactive point symbol map\n\n\nCode\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"red\",\n           size = 1,\n           col = \"black\",\n           lwd = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#proportional",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#proportional",
    "title": "Hands-on Exercise 8",
    "section": "Proportional",
    "text": "Proportional\n\n\nCode\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"red\",\n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#different-colour",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#different-colour",
    "title": "Hands-on Exercise 8",
    "section": "Different colour",
    "text": "Different colour\n\n\nCode\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"OUTLET TYPE\", \n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#side-by-side",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#side-by-side",
    "title": "Hands-on Exercise 8",
    "section": "Side by side",
    "text": "Side by side\n\n\nCode\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"OUTLET TYPE\", \n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1) + \n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode(\"plot\")\n\n\nℹ tmap mode set to \"plot\".\n\n\n#Import data\n\n\nCode\nNGA_wp &lt;- read_rds(\"chap08/data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#deriving-proportion-of-functional-water-points-and-non-functional-water-points",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#deriving-proportion-of-functional-water-points-and-non-functional-water-points",
    "title": "Hands-on Exercise 8",
    "section": "Deriving Proportion of Functional Water Points and Non-Functional Water Points",
    "text": "Deriving Proportion of Functional Water Points and Non-Functional Water Points\n\n\nCode\nNGA_wp &lt;- NGA_wp %&gt;%\n  mutate(pct_functional = wp_functional/total_wp) %&gt;%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#plot-map-of-rate",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#plot-map-of-rate",
    "title": "Hands-on Exercise 8",
    "section": "plot map of rate",
    "text": "plot map of rate\n\n\nCode\ntm_shape(NGA_wp) +\n  tm_polygons(\"pct_functional\",\n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 10,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                position = c(\"right\", \"bottom\"))) + \n  tm_borders(lwd = 0.1,\n             fill_alpha = 1) +\n  tm_title(\"Rate map of functional water point by LGAs\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#extreme-value-maps-percentile-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#extreme-value-maps-percentile-map",
    "title": "Hands-on Exercise 8",
    "section": "Extreme Value Maps (Percentile Map)",
    "text": "Extreme Value Maps (Percentile Map)\n\n\nCode\nNGA_wp &lt;- NGA_wp %&gt;%\n  drop_na()\n\npercent &lt;- c(0,.01,.1,.5,.9,.99,1)\nvar &lt;- NGA_wp[\"pct_functional\"] %&gt;%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-the-get.var-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-the-get.var-function",
    "title": "Hands-on Exercise 8",
    "section": "Creating the get.var function",
    "text": "Creating the get.var function\n\n\nCode\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% \n    st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#a-percentile-mapping-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#a-percentile-mapping-function",
    "title": "Hands-on Exercise 8",
    "section": "A percentile mapping function",
    "text": "A percentile mapping function\n\n\nCode\npercentmap &lt;- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent &lt;- c(0,.01,.1,.5,.9,.99,1)\n  var &lt;- get.var(vnam, df)\n  bperc &lt;- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_polygons(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"&lt; 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"&gt; 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#test-drive-the-percentile-mapping-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#test-drive-the-percentile-mapping-function",
    "title": "Hands-on Exercise 8",
    "section": "Test drive the percentile mapping function",
    "text": "Test drive the percentile mapping function\n\n\nCode\npercentmap(\"total_wp\", NGA_wp)\n\n\n\n\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n\n\n[v3-&gt;v4] `tm_tm_polygons()`: migrate the argument(s) related to the scale of\nthe visual variable `fill` namely 'breaks', 'palette' (rename to 'values'),\n'labels' to fill.scale = tm_scale(&lt;HERE&gt;).\n[v3-&gt;v4] `tm_polygons()`: migrate the argument(s) related to the legend of the\nvisual variable `fill` namely 'title' to 'fill.legend = tm_legend(&lt;HERE&gt;)'\n[v3-&gt;v4] `tm_layout()`: use `tm_title()` instead of `tm_layout(title = )`\n[v3-&gt;v4] `tm_layout()`: use `tm_title()` instead of `tm_layout(main.title = )`\n[cols4all] color palettes: use palettes from the R package cols4all. Run\n`cols4all::c4a_gui()` to explore them. The old palette name \"Blues\" is named\n\"brewer.blues\"\nMultiple palettes called \"blues\" found: \"brewer.blues\", \"matplotlib.blues\". The first one, \"brewer.blues\", is returned."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#box-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#box-map",
    "title": "Hands-on Exercise 8",
    "section": "Box Map",
    "text": "Box Map\n\n\nCode\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-the-boxbreaks-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#creating-the-boxbreaks-function",
    "title": "Hands-on Exercise 8",
    "section": "Creating the boxbreaks function",
    "text": "Creating the boxbreaks function\n\n\nCode\nboxbreaks &lt;- function(v,mult=1.5) {\n  qv &lt;- unname(quantile(v))\n  iqr &lt;- qv[4] - qv[2]\n  upfence &lt;- qv[4] + mult * iqr\n  lofence &lt;- qv[2] - mult * iqr\n  # initialize break points vector\n  bb &lt;- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence &lt; qv[1]) {  # no lower outliers\n    bb[1] &lt;- lofence\n    bb[2] &lt;- floor(qv[1])\n  } else {\n    bb[2] &lt;- lofence\n    bb[1] &lt;- qv[1]\n  }\n  if (upfence &gt; qv[5]) { # no upper outliers\n    bb[7] &lt;- upfence\n    bb[6] &lt;- ceiling(qv[5])\n  } else {\n    bb[6] &lt;- upfence\n    bb[7] &lt;- qv[5]\n  }\n  bb[3:5] &lt;- qv[2:4]\n  return(bb)\n}\n\n\n\nCreating the get.var function\n\n\nCode\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}\n\n\n\n\nTest drive the newly created function\n\n\nCode\nvar &lt;- get.var(\"wp_nonfunctional\", NGA_wp) \nboxbreaks(var)\n\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#boxmap-function",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#boxmap-function",
    "title": "Hands-on Exercise 8",
    "section": "Boxmap function",
    "text": "Boxmap function\n\n\nCode\nboxmap &lt;- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   position = \"right\",\n                   mult=1.5){\n  var &lt;- get.var(vnam,df)\n  bb &lt;- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"&lt; 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"&gt; 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\ntmap_mode(\"plot\")\n\n\nℹ tmap mode set to \"plot\".\n\n\nCode\nboxmap(\"wp_nonfunctional\", NGA_wp)\n\n\n\n── tmap v3 code detected ───────────────────────────────────────────────────────\n[v3-&gt;v4] `tm_tm_fill()`: migrate the argument(s) related to the scale of the\nvisual variable `fill` namely 'breaks', 'palette' (rename to 'values'),\n'labels' to fill.scale = tm_scale(&lt;HERE&gt;).[v3-&gt;v4] `tm_fill()`: migrate the argument(s) related to the legend of the\nvisual variable `fill` namely 'title' to 'fill.legend = tm_legend(&lt;HERE&gt;)'[v3-&gt;v4] `tm_layout()`: use `tm_title()` instead of `tm_layout(title = )`[v3-&gt;v4] `tm_layout()`: use `tm_title()` instead of `tm_layout(main.title = )`[cols4all] color palettes: use palettes from the R package cols4all. Run\n`cols4all::c4a_gui()` to explore them. The old palette name \"Blues\" is named\n\"brewer.blues\"Multiple palettes called \"blues\" found: \"brewer.blues\", \"matplotlib.blues\". The first one, \"brewer.blues\", is returned."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html",
    "href": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html",
    "title": "In-Class Ex 05",
    "section": "",
    "text": "Code\npacman::p_load(tidyverse, jsonlite,\n               SmartEDA, tidygraph,\n               ggraph)\n\n\n\n\n\n\n\nCode\nkg &lt;- fromJSON(\"data/MC1_graph.json\")\n\n\n\n\n\n\nCode\nstr(kg, max.level = 1)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n $ links     :'data.frame': 37857 obs. of  4 variables:\n\n\n\n\n\n\n\nCode\nnodes_tbl &lt;- as_tibble(kg$nodes)\nedges_tbl &lt;- as_tibble(kg$links)\n\n\n\n\n\n\n\n\nCode\nggplot(data = edges_tbl, aes(y = `Edge Type`)) +\n  geom_bar()\n\n\n\n\n\n\n\nCode\nggplot(data = nodes_tbl, aes(y = `Node Type`)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nid_map &lt;- tibble(\n  id = nodes_tbl$id,\n  index = seq_len(nrow(nodes_tbl))\n)\n\n\n\n\n\n\n\nCode\nedges_tbl &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%\n  rename(to = index)\n\n\n\n\n\n\n\nCode\nedges_tbl &lt;- edges_tbl %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n\n\n\n\n\n\nCode\ngraph &lt;- tbl_graph(\n  nodes = nodes_tbl,\n  edges = edges_tbl,\n  directed = kg$directed\n)\n\n\n\n\n\n\n\n\nCode\nset.seed(1234)\n\n\n\n\n\n\nCode\nggraph(graph, layout = \"fr\") +\n  geom_edge_link(alpha = 0.3, colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`), size = 4) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 2.5) +\n  theme_void()\n\n\n\n\n\n\nCode\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(`Edge Type` == \"MemberOf\")\n\n\n\n\n\n(i.e.,used in these edges)\n\n\nCode\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()\n\n\n\n\n\n\n\nCode\ngraph_memberof &lt;- graph_memberof %&gt;%\n  activate(nodes) %&gt;%\n  mutate(row_id = row_number()) %&gt;%\n  filter(row_id %in% used_node_indices) %&gt;%\n  select(-row_id)  # optional cleanup\n\n\n\n\n\n\n\nCode\nggraph(graph_memberof,\n       layout = \"fr\") +\n  geom_edge_link(alpha = 0.5,\n                 colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`),\n                  size = 1) +\n  geom_node_text(aes(label = name),\n                 repel = TRUE,\n                 size = 2.5) +\n  theme_void()\n\n\nWarning: ggrepel: 789 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html#import-package",
    "href": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html#import-package",
    "title": "In-Class Ex 05",
    "section": "",
    "text": "Code\npacman::p_load(tidyverse, jsonlite,\n               SmartEDA, tidygraph,\n               ggraph)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html#import-data",
    "href": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html#import-data",
    "title": "In-Class Ex 05",
    "section": "",
    "text": "Code\nkg &lt;- fromJSON(\"data/MC1_graph.json\")\n\n\n\n\n\n\nCode\nstr(kg, max.level = 1)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n $ links     :'data.frame': 37857 obs. of  4 variables:\n\n\n\n\n\n\n\nCode\nnodes_tbl &lt;- as_tibble(kg$nodes)\nedges_tbl &lt;- as_tibble(kg$links)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html#initial-eda",
    "href": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html#initial-eda",
    "title": "In-Class Ex 05",
    "section": "",
    "text": "Code\nggplot(data = edges_tbl, aes(y = `Edge Type`)) +\n  geom_bar()\n\n\n\n\n\n\n\nCode\nggplot(data = nodes_tbl, aes(y = `Node Type`)) +\n  geom_bar()"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html#create-knowledge-graph",
    "href": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html#create-knowledge-graph",
    "title": "In-Class Ex 05",
    "section": "",
    "text": "Code\nid_map &lt;- tibble(\n  id = nodes_tbl$id,\n  index = seq_len(nrow(nodes_tbl))\n)\n\n\n\n\n\n\n\nCode\nedges_tbl &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%\n  rename(to = index)\n\n\n\n\n\n\n\nCode\nedges_tbl &lt;- edges_tbl %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n\n\n\n\n\n\nCode\ngraph &lt;- tbl_graph(\n  nodes = nodes_tbl,\n  edges = edges_tbl,\n  directed = kg$directed\n)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html#visualising-the-knowledge-graph-control-the-layout-with-the-value",
    "href": "In-Class_Ex/In-Class_Ex05/In-Class_Ex05.html#visualising-the-knowledge-graph-control-the-layout-with-the-value",
    "title": "In-Class Ex 05",
    "section": "",
    "text": "Code\nset.seed(1234)\n\n\n\n\n\n\nCode\nggraph(graph, layout = \"fr\") +\n  geom_edge_link(alpha = 0.3, colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`), size = 4) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 2.5) +\n  theme_void()\n\n\n\n\n\n\nCode\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(`Edge Type` == \"MemberOf\")\n\n\n\n\n\n(i.e.,used in these edges)\n\n\nCode\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()\n\n\n\n\n\n\n\nCode\ngraph_memberof &lt;- graph_memberof %&gt;%\n  activate(nodes) %&gt;%\n  mutate(row_id = row_number()) %&gt;%\n  filter(row_id %in% used_node_indices) %&gt;%\n  select(-row_id)  # optional cleanup\n\n\n\n\n\n\n\nCode\nggraph(graph_memberof,\n       layout = \"fr\") +\n  geom_edge_link(alpha = 0.5,\n                 colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`),\n                  size = 1) +\n  geom_node_text(aes(label = name),\n                 repel = TRUE,\n                 size = 2.5) +\n  theme_void()\n\n\nWarning: ggrepel: 789 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications.\nIn this website, you will find my coursework prepared for this course"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take-Home_Ex01 part 1",
    "section": "",
    "text": "As the graphical editor of a media company, I have been tasked to design up to three impactful data visualisations to support an article on Singapore’s resident population as of June 2024.\nThe aim is to help readers quickly understand demographic trends using clear and accessible visuals based on official statistics.\n\n\nDepartment of Statistics Singapore (DOS): Planning Area and Subzone, Single Year of Age (0–100+), Sex (Male, Female, Total), Resident Population counts (as of June 2024)\n\n\n\n\nRelevance: Support editorial narratives (e.g. ageing population, regional differences)\nClarity: Easy for general readers to understand\nCompactness: Limited to a maximum of three charts"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#editorial-brief-visualising-singapores-resident-population-2024",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#editorial-brief-visualising-singapores-resident-population-2024",
    "title": "Take-Home_Ex01 part 1",
    "section": "",
    "text": "As the graphical editor of a media company, I have been tasked to design up to three impactful data visualisations to support an article on Singapore’s resident population as of June 2024.\nThe aim is to help readers quickly understand demographic trends using clear and accessible visuals based on official statistics.\n\n\nDepartment of Statistics Singapore (DOS): Planning Area and Subzone, Single Year of Age (0–100+), Sex (Male, Female, Total), Resident Population counts (as of June 2024)\n\n\n\n\nRelevance: Support editorial narratives (e.g. ageing population, regional differences)\nClarity: Easy for general readers to understand\nCompactness: Limited to a maximum of three charts"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-preparation-summary",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-preparation-summary",
    "title": "Take-Home_Ex01 part 1",
    "section": "Data Preparation Summary",
    "text": "Data Preparation Summary\n\nCleaned and filtered for relevant fields (Age, Sex, Planning Area)\nConverted columns to numeric where needed (e.g. Age, Population)\nAggregated by region and demographic groups for visual storytelling\n\n\nData Cleaning Summary\nTo prepare the dataset for visualisation, the following data cleaning steps were applied:\n\nSkipped Metadata Rows\nThe original Excel file contained header and metadata rows. We used skiprows = 2 to access only the actual data records.\nDropped Incomplete Rows\nRemoved rows where any key fields were missing:\n\nSubzone\nAge\nSex\nPopulation (2024)\nThis ensures only valid, complete records are included in the analysis.\n\nRenamed Columns for Clarity\nReplaced generic or auto-generated column names (e.g., Unnamed: x, 2024) with:\n\nPlanning Area, Subzone, Age, Sex, Population\n\nConverted to Numeric Types\nConverted the Age and Population columns to numeric using coercion.\nNon-numeric values were turned into NA and filtered out.\nRemoved Rows with Missing Age or Population\nAny rows with missing (NA) values in Age or Population were dropped after conversion."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-parameters-and-description",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-parameters-and-description",
    "title": "Take-Home_Ex01 part 1",
    "section": "Data Parameters and Description",
    "text": "Data Parameters and Description\n\n\n\n\n\n\n\nField Name\nField Description\n\n\n\n\nPlanning Area\nAdministrative regions in Singapore (e.g. Bedok, Ang Mo Kio, Tampines, etc.)\n\n\nSubzone\nSubdivisions within each Planning Area\n\n\nAge\nAge of residents in single years (0 to 100+)\n\n\nSex\nGender category: Male, Female, or Total\n\n\nPopulation\nNumber of residents for the given demographic group in June 2024"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#load-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#load-packages",
    "title": "Take-Home_Ex01 part 1",
    "section": "Load packages",
    "text": "Load packages\nWe begin by loading all required R packages using the pacman::p_load() function. These packages support data wrangling, visualisation, animation, and layout composition for this take-home exercise.\n\ntidyverse: Core set of packages for data manipulation, transformation, and visualisation using ggplot2.\nreadxl: To import Excel files (.xlsx), such as the population dataset used in this exercise.\nhaven: Enables importing datasets from software like SPSS, SAS, and Stata.\nggrepel: Prevents overlapping text labels in ggplot2 plots, improving readability.\nggthemes: Provides additional ggplot2 themes for publication-quality charts.\npatchwork: Combines multiple ggplot2 plots into a single composite layout.\nggridges: Creates ridgeline plots to visualise distributions across categories.\nggdist: Supports visualisations of distributions and uncertainty (e.g. dot + interval plots).\nscales: Useful for formatting axis labels (e.g. commas, percentages, date breaks).\nplotly: Adds interactivity to static plots made with ggplot2, enabling zoom, hover, etc.\ngganimate: Enables animation of ggplot2 plots across time or other variables.\ngifski: Required by gganimate to render animations into GIF format.\ngapminder: A sample dataset often used for animated population plots and trend visualisation.\n\n\npacman::p_load(tidyverse, readxl, haven, ggrepel, \nggthemes, patchwork, ggridges, ggdist, scales, plotly, \ngganimate, gifski, gapminder)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#import-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#import-data",
    "title": "Take-Home_Ex01 part 1",
    "section": "Import Data",
    "text": "Import Data\n\npop_data &lt;- read_csv(\"TH01/data/cleaned_population_2024.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-1-insights",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-1-insights",
    "title": "Take-Home_Ex01 part 1",
    "section": "EDA 1 Insights",
    "text": "EDA 1 Insights\nThe following insights were derived from two visualizations:\n1. A population pyramid by individual age\n2. A segmented pyramid grouped by age stages\nBalanced Gender Counts in Ages 0–19\n- Both the individual and grouped charts show that male and female populations are nearly equal from age 0 to 19\n- This includes the “Children (0–12)” and “Teenagers (13–19)” segments\n- The bars are symmetrical for both sexes, indicating no gender disparity in the younger cohorts\nLargest Population in Middle-aged Adults (40–64)\n- The “Middle-aged Adults (40–64)” age group is the most populous, with the widest stacked bar\n- This observation holds true in both visualizations\nGreater Female Presence in Elderly (65+)\n- In the individual age plot, females outnumber males starting around age 70\n- The difference becomes increasingly prominent in the 80 to 100+ range\n- This is reinforced in the grouped pyramid where the “Elderly (65+)” bar is longer for females\nSmaller Cohorts in Youth (Ages 0–19)\n- The “Children (0–12)” and “Teenagers (13–19)” groups have the shortest bars\n- This reflects a shrinking young population, as seen in the narrow base of the age-specific pyramid"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-2-insights",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-2-insights",
    "title": "Take-Home_Ex01 part 1",
    "section": "EDA 2 Insights",
    "text": "EDA 2 Insights\n\nBedok, Tampines, and Jurong West Appear in Both Rankings\nThese three planning areas rank in the top 10 for both total population and elderly population (65+), indicating they are high-density towns with large absolute numbers of seniors.\nCentral Area Ranks High in Total Population but Not in Elderly Count\nWhile the Central Area appears in the total population chart, it is absent from the elderly chart, suggesting a lower proportion of elderly residents — possibly due to its mixed commercial-residential nature.\nAng Mo Kio and Bukit Merah Appear Only in the Elderly Ranking\nThese areas do not rank among the top 10 in total population but have high elderly counts, implying a relatively older resident base compared to newer towns.\nWoodlands and Sengkang Rank High in Total but Not Elderly Population\nThese towns appear in the total population top 10 but are absent in the elderly top 10, indicating a younger demographic composition.\nElderly Population Distribution is More Uniform\nCompared to the total population, the elderly population values are closer in range, suggesting a more even spread of seniors across the top-ranked areas."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-3-insights",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-3-insights",
    "title": "Take-Home_Ex01 part 1",
    "section": "EDA 3 Insights",
    "text": "EDA 3 Insights\n\nHigher Elderly Proportions\nPlanning areas such as Outram, Bukit Merah, and Ang Mo Kio have visibly higher proportions of residents aged 65 and above.\nYounger Population Profiles\nAreas like Punggol, Sembawang, and Tengah show larger proportions of Children (0–12) and Young Adults (20–39), with smaller Elderly segments.\nMiddle-aged Adults Dominate Most Areas\nThe 40–64 age group forms the largest proportion in most planning areas, indicating a dominant working-age population.\n“Total” Row Reflects National Age Structure\nThe bar labeled “Total” reflects the overall distribution of age groups across all planning areas and serves as a baseline for comparison.\nSmaller Young Dependent Segments\nIn most planning areas, Children and Teenagers together constitute less than 25% of the population.\nBalanced Age Distribution in Selected Areas\nSome areas such as Jurong West and Woodlands display relatively balanced proportions across all five age groups."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01_2/Take-Home_Ex01_2.html",
    "href": "Take-Home_Ex/Take-Home_Ex01_2/Take-Home_Ex01_2.html",
    "title": "Take-Home_Ex01 part 2",
    "section": "",
    "text": "This review is based on the submission by Sandra Jacob, available at:\n🔗 https://sandrajacob-isss608.netlify.app/takehome_exercises/takehome_ex01/takehomeex01"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01_2/Take-Home_Ex01_2.html#three-good-design-principles-applied",
    "href": "Take-Home_Ex/Take-Home_Ex01_2/Take-Home_Ex01_2.html#three-good-design-principles-applied",
    "title": "Take-Home_Ex01 part 2",
    "section": "✅ Three Good Design Principles Applied",
    "text": "✅ Three Good Design Principles Applied\n\nClear and Descriptive Title with Proper Axis Labels\n\nThe chart’s title — “Male and Female Population by Region” — succinctly conveys the purpose of the visualisation. Coupled with clearly labeled axes (“Region” and “Total Population”), this design adheres to fundamental graphical integrity and supports rapid comprehension. It aligns with best practices for enhancing cognitive accessibility in data graphics.\n\nStrategic Use of Color for Categorical Differentiation\n\nThe use of high-contrast, intuitive colors (maroon for Females and navy for Males) effectively encodes the categorical variable (Sex). This leverages pre-attentive visual processing, enabling users to instantly distinguish between gender groups. The visual encoding is both aesthetically pleasing and functionally efficient, which is crucial in comparative visualisations.\n\nInclusion of Percentage Labels to Add Analytical Depth\n\nEach bar is annotated with percentage labels that represent the proportion of each gender within its respective region. This additional layer of information transforms a basic bar chart into a more analytically enriched visual, allowing users to compare both absolute values and relative gender compositions simultaneously. This reflects the principle of “deriving insight” rather than merely displaying raw data” — a key goal in visual analytics."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01_2/Take-Home_Ex01_2.html#three-areas-for-further-improvement",
    "href": "Take-Home_Ex/Take-Home_Ex01_2/Take-Home_Ex01_2.html#three-areas-for-further-improvement",
    "title": "Take-Home_Ex01 part 2",
    "section": "❌ Three Areas for Further Improvement",
    "text": "❌ Three Areas for Further Improvement\n\nLabel Overlap and Legibility Concerns\n\nWhile the inclusion of percentage labels is commendable, their placement above the bars results in visual congestion—especially in regions like North-East and West, where the height differences between segments are minimal. This diminishes readability and increases cognitive load. To resolve this:\n\nPlace labels inside the bars using position_stack(vjust = 0.5)\nUse a horizontal layout to increase label spacing\nReduce font size or apply ggrepel for smart label adjustment\n\n\nLack of Alignment Between Data and Message\n\nAlthough percentage labels are presented, the bar height still encodes absolute values. This can lead viewers to focus on population differences rather than proportional differences. A 100% stacked bar chart would better align with the intent to highlight gender balance within each region.\n\nSuboptimal Chart Type for Comparative Ratios\n\nGrouped bar charts are ideal for comparing totals but are less effective for showing composition within a group. A normalized horizontal stacked bar chart would:\n\nMore clearly show gender proportion\nEliminate vertical label collisions\nFollow a natural left-to-right reading flow that supports comparison"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01_2/Take-Home_Ex01_2.html#improvement-1-what-was-improved",
    "href": "Take-Home_Ex/Take-Home_Ex01_2/Take-Home_Ex01_2.html#improvement-1-what-was-improved",
    "title": "Take-Home_Ex01 part 2",
    "section": "🔧 Improvement 1: What Was Improved",
    "text": "🔧 Improvement 1: What Was Improved\n\n\nCode\ngender_summary_long &lt;- respop_cleaned %&gt;%\n  group_by(Region, Sex) %&gt;%\n  summarise(Total_Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  group_by(Region) %&gt;%\n  mutate(\n    Region_Total = sum(Total_Pop),\n    Percent = (Total_Pop / Region_Total) * 100,\n    Label = paste0(round(Percent, 1), \"%\\n(\", scales::comma(Total_Pop), \")\")\n  )\n\n# Plot: stacked bar with % + population inside bars\nggplot(gender_summary_long, aes(x = Region, y = Percent, fill = Sex)) +\n  geom_col(position = \"stack\", width = 0.6) +\n\n  # Percentage + population inside each segment\n  geom_text(\n    aes(label = Label),\n    position = position_stack(vjust = 0.5),\n    color = \"white\",\n    size = 3, family = \"nunito\"\n  ) +\n\n  labs(\n    title = \"Gender Distribution by Region (2024)\",\n    subtitle = \"Each bar shows gender % and absolute population count\",\n    x = \"Region\",\n    y = \"Percentage (%)\",\n    fill = \"Gender\"\n  ) +\n  scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  scale_fill_manual(values = c(\"Females\" = \"#A93226\", \"Males\" = \"#2C3E50\")) +\n  theme_minimal(base_family = \"nunito\") +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 15),\n    plot.subtitle = element_text(hjust = 0.5, size = 11)\n  )\n\n\n\n\n\nThis revised visualisation enhance both analytical clarity and graphical integrity:\n\n1. From Absolute Counts to Proportional Comparison\n\nOriginal: Displayed only raw population counts for each gender, which made it difficult to compare the gender distribution within each region.\nImproved: Transformed into a 100% stacked bar chart that normalises each region to 100%, making it much easier to compare gender ratios across regions.\n\n\n\n2. Embedded Dual-Level Information in Labels\n\nOriginal: Included either percentage or total population as labels, but not both.\nImproved: Combined both percentage and absolute count in each label (e.g., 48.7%\\n(123,456)), allowing the viewer to simultaneously interpret relative proportion and actual magnitude.\n\n\n\n3. Improved Label Positioning and Readability\n\nOriginal: Percentage labels were placed outside the bars, leading to overlapping and reduced clarity, especially for regions with similar male/female proportions.\nImproved: Labels are now placed inside the bar segments using position_stack(vjust = 0.5), increasing legibility and reducing visual clutter.\n\n\n\n4. Chart Type Aligns with Analytical Purpose\n\nOriginal: Used a grouped bar chart, which is more appropriate for comparing absolute values across categories.\nImproved: Switched to a stacked bar layout, which better supports the analytical objective of comparing gender balance within each region.\n\n\n\nImprovement outlines\nThese improvements follow the visual design principles outlined in Lesson 2: Designing Graphs to Enlighten, particularly:\n\nUsing the right chart to match the message\nEnhancing interpretability through derived metrics\nLeveraging pre-attentive features like color and label placement"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01_2/Take-Home_Ex01_2.html#improvement-summary-2-what-was-further-improved",
    "href": "Take-Home_Ex/Take-Home_Ex01_2/Take-Home_Ex01_2.html#improvement-summary-2-what-was-further-improved",
    "title": "Take-Home_Ex01 part 2",
    "section": "🔧 Improvement Summary 2: What Was Further Improved",
    "text": "🔧 Improvement Summary 2: What Was Further Improved\n\n\nCode\ngender_summary_long &lt;- respop_cleaned %&gt;%\n  group_by(Region, Sex) %&gt;%\n  summarise(Total_Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  group_by(Region) %&gt;%\n  mutate(\n    Region_Total = sum(Total_Pop),\n    Region_Percent = round((Total_Pop / Region_Total) * 100, 1),\n    Label = paste0(Region_Percent, \"%\\n(\", scales::comma(Total_Pop), \")\")\n  ) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    Region = fct_reorder(Region, Region_Total, .desc = TRUE),  # sort by Region_Total\n    Sex = factor(Sex, levels = c(\"Males\", \"Females\"))           # ensure stacking order\n  ) %&gt;%\n  arrange(Region, Sex)  # ensure correct stacking order\n\n# Plot\nggplot(gender_summary_long, aes(y = Region, x = Total_Pop, fill = Sex)) +\n  geom_col(position = \"stack\", width = 0.6) +\n  geom_text(\n    aes(label = Label),\n    position = position_stack(vjust = 0.5),\n    color = \"white\",\n    size = 3,\n    family = \"nunito\"\n  ) +\n  labs(\n    title = \"Total Male and Female Population by Region (2024)\",\n    subtitle = \"Labels show % within each region and absolute population\",\n    x = \"Total Population\",\n    y = \"Region\",\n    fill = \"Gender\"\n  ) +\n  scale_x_continuous(\n    labels = scales::label_comma(),\n    breaks = seq(0, 1000000, 100000)\n  ) +\n  scale_fill_manual(values = c(\"Females\" = \"#A93226\", \"Males\" = \"#2C3E50\")) +\n  theme_minimal(base_family = \"nunito\") +\n  theme(\n    axis.text.y = element_text(size = 10),\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 15),\n    plot.subtitle = element_text(hjust = 0.5, size = 11)\n  )\n\n\n\n\n\nBuilding on the earlier stacked percentage chart, this updated visualisation improves the clarity, comparability, and contextual storytelling of the gender distribution across regions in 2024.\n\n1. Switched from Percentage to Actual Population on the X-Axis\n\nPrevious: X-axis showed gender percentage share, which helped with proportion comparison but hid the actual population scale.\nImproved: Uses raw population values on the x-axis (with comma formatting and 100k breaks), enabling clear comparison of both gender ratio and total population per region.\n\n\n\n2. Horizontal Layout Enhances Label Readability and Comparison\n\nPrevious: Vertical bars made category names harder to read, and labels could overlap in crowded segments.\nImproved: Horizontal stacked bars make region names easier to scan and reduce label collision, improving overall legibility and alignment with natural left-to-right reading flow.\n\n\n\n3. Regions Sorted by Total Population\n\nPrevious: Regions were presented in arbitrary or default order, which reduced analytical clarity.\nImproved: Regions are now sorted in descending order of total population, highlighting population scale differences and making the chart easier to interpret at a glance.\n\n\n\n4. Maintained Rich, Dual-Layer Labels\n\nEach bar segment still includes a concise label that combines the percentage share and absolute count (e.g., 50.5% (302,710)), enabling multi-level insight in a compact, readable form.\n\n\n\nImprovement outlines\nThese refinements not only retain the strengths of the previous version but enhance the visual’s ability to communicate both structure (proportions) and magnitude (totals) — an important principle covered in Lesson 2: Designing Graphs to Enlighten."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take-Home_Ex02",
    "section": "",
    "text": "Over the past decade, Oceanus has transitioned from a fishing-based economy to one increasingly reliant on ocean tourism, following crackdowns on illegal fishing. This shift has caused tensions, especially with recent high-profile events like pop star Sailor Shift’s planned music video shoot on the island.\nJournalist Clepper Jessen, formerly of FishEye and now with the Hacklee Herald, has been investigating these tensions. His latest focus is the sudden closure of Nemo Reef. Through intercepted communications and investigative analysis, Clepper uncovered a network of expedited approvals and covert arrangements implicating Oceanus officials, Sailor Shift’s team, powerful local families, and the conservation group The Green Guardians—suggesting a potential case of corruption and manipulation.\nTask: Create innovative visualizations and visual analytics tools to help Clepper expose the truth behind these events."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#import-library-package",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#import-library-package",
    "title": "Take-Home_Ex02",
    "section": "Import library package",
    "text": "Import library package\n\n\nCode\npacman::p_load(tidyverse, jsonlite, lubridate, ggraph, tidygraph, visNetwork)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#import-data-and-extract-nodes-and-edges",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#import-data-and-extract-nodes-and-edges",
    "title": "Take-Home_Ex02",
    "section": "Import data and extract nodes and edges",
    "text": "Import data and extract nodes and edges\n\n\nCode\n# Load graph structure\ngraph_raw &lt;- fromJSON(\"TH02/data/MC3_graph.json\", flatten = TRUE)\nnodes &lt;- graph_raw$nodes\nedges &lt;- graph_raw$edges"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#parse-timestamp-and-extract-day",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#parse-timestamp-and-extract-day",
    "title": "Take-Home_Ex02",
    "section": "Parse Timestamp and Extract Day",
    "text": "Parse Timestamp and Extract Day\n\n\nCode\n# Convert timestamp to datetime and extract date\ncomm_events &lt;- nodes %&gt;%\n  filter(type == \"Event\", sub_type == \"Communication\") %&gt;%\n  select(id, timestamp)  # Make sure 'timestamp' is the actual column name\n\n# Step 2: Parse timestamp into datetime and extract the date\ncomm_events &lt;- comm_events %&gt;%\n  mutate(\n    start_time = ymd_hms(timestamp, quiet = TRUE),\n    day = as.Date(start_time)\n  )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summarise-daily-communication-volume",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#summarise-daily-communication-volume",
    "title": "Take-Home_Ex02",
    "section": "Summarise daily Communication Volume",
    "text": "Summarise daily Communication Volume\n\n\nCode\n# Count number of communications per day\ndaily_comms &lt;- comm_events %&gt;%\n  count(day, name = \"num_comms\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualise-the-temporal-pattern",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualise-the-temporal-pattern",
    "title": "Take-Home_Ex02",
    "section": "Visualise the Temporal Pattern",
    "text": "Visualise the Temporal Pattern\n\n\nCode\n# Plot as a time series\nggplot(daily_comms, aes(x = day, y = num_comms)) +\n  geom_line(color = \"steelblue\", linewidth = 1.2) +\n  geom_point(size = 2) +\n  labs(title = \"Daily Communication Patterns (2-Week Period)\",\n       x = \"Date\", y = \"Number of Communications\") +\n  theme_minimal()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#filter-people-vessels-only",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#filter-people-vessels-only",
    "title": "Take-Home_Ex02",
    "section": "Filter People + Vessels only",
    "text": "Filter People + Vessels only\n\n\nCode\n# Filter relevant entity nodes\nentity_nodes &lt;- nodes %&gt;%\n  filter(type == \"Entity\", sub_type %in% c(\"Person\", \"Vessel\")) %&gt;%\n  select(id, name, sub_type)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#assign-groups-based-on-namesubtype-for-better-analytics",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#assign-groups-based-on-namesubtype-for-better-analytics",
    "title": "Take-Home_Ex02",
    "section": "Assign groups based on name/subtype for better analytics",
    "text": "Assign groups based on name/subtype for better analytics\n\n\nCode\nentity_nodes &lt;- entity_nodes %&gt;%\n  mutate(\n    group = case_when(\n      name %in% c(\"Green Guardians\", \"Reef Guardian\", \"EcoVigil\", \"Sentinel\") ~ \"Environmentalism\",\n      name %in% c(\"Sailor Shift\", \"Sailor Shifts Team\") ~ \"Sailor Shift\",\n      name %in% c(\"Mariners Dream\", \"Marlin\", \"Recreational Fishing Boats\") ~ \"Fishing/Leisure\",\n      name %in% c(\"Serenity\", \"Horizon\", \"Osprey\", \"Remora\", \"Neptune\", \"Mako\") ~ \"Tourism/Leisure\",\n      TRUE ~ sub_type # fallback: Person or Vessel\n    )\n  )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#filter-edges-between-people-and-vessels-communication-events",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#filter-edges-between-people-and-vessels-communication-events",
    "title": "Take-Home_Ex02",
    "section": "Filter Edges Between People and Vessels (Communication events)",
    "text": "Filter Edges Between People and Vessels (Communication events)\n\n\nCode\n# Identify valid entity IDs\nvalid_ids &lt;- entity_nodes$id\n\n# Get communication events\ncomm_event_ids &lt;- nodes %&gt;%\n  filter(type == \"Event\", sub_type == \"Communication\") %&gt;%\n  pull(id)\n\n# Filter 'sent' and 'received' edges for communication events\nsent_edges &lt;- edges %&gt;%\n  filter(type == \"sent\", target %in% comm_event_ids) %&gt;%\n  select(event_id = target, entity_id = source)\n\nreceived_edges &lt;- edges %&gt;%\n  filter(type == \"received\", source %in% comm_event_ids) %&gt;%\n  select(event_id = source, entity_id = target)\n\n# Combine and create entity pairs\nentity_event_edges &lt;- bind_rows(sent_edges, received_edges)\n\nentity_pairs &lt;- entity_event_edges %&gt;%\n  inner_join(entity_event_edges, by = \"event_id\") %&gt;%\n  filter(entity_id.x != entity_id.y) %&gt;%\n  distinct(entity_id.x, entity_id.y) %&gt;%\n  rename(source = entity_id.x, target = entity_id.y) %&gt;%\n  filter(source %in% valid_ids & target %in% valid_ids)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#build-and-cluster-graph",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#build-and-cluster-graph",
    "title": "Take-Home_Ex02",
    "section": "Build and Cluster Graph",
    "text": "Build and Cluster Graph\n\n\nCode\ngraph_tbl &lt;- tbl_graph(nodes = entity_nodes, edges = entity_pairs, directed = FALSE)\n\n# Detect clusters (communities) for color grouping\ngraph_tbl &lt;- graph_tbl %&gt;%\n  mutate(cluster = as.factor(group_infomap()))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualise-groups",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualise-groups",
    "title": "Take-Home_Ex02",
    "section": "Visualise Groups",
    "text": "Visualise Groups\n\n\nCode\nggraph(graph_tbl, layout = \"fr\") +\n  geom_edge_link(alpha = 0.2) +\n  geom_node_point(aes(color = group, shape = sub_type), size = 4) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 2.5) +\n  labs(title = \"Entity Communication Network: People and Vessels\",\n       color = \"Group\", shape = \"Type\") +\n  theme_minimal()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "title": "Take-Home_EX03",
    "section": "",
    "text": "Replicate Take home 2 with teammates’s package and Data Cleaning/Wrangling.\nCluster Analysis will be the Main part of Take Home Exercise 3"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#import-library-package",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#import-library-package",
    "title": "Take-Home_EX03",
    "section": "Import library package",
    "text": "Import library package\n\n\nCode\npacman::p_load(tidyverse, jsonlite, lubridate, ggraph, tidygraph, visNetwork, igraph, patchwork)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#import-data-and-extract-nodes-and-edges",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#import-data-and-extract-nodes-and-edges",
    "title": "Take-Home_EX03",
    "section": "Import data and extract nodes and edges",
    "text": "Import data and extract nodes and edges\n\n\nCode\n# Load graph structure\nMC3 &lt;- fromJSON(\"TH03/data/MC3_graph.json\")\nMC3_schema &lt;- fromJSON(\"TH03/data/MC3_schema.json\")\n\nmc3_nodes &lt;- as_tibble(MC3$nodes)\nmc3_edges &lt;- as_tibble(MC3$edges)\n\n\n\n\nCode\nglimpse(MC3)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame': 1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':   1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame': 3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ..."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#clean-and-wrangling-nodes",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#clean-and-wrangling-nodes",
    "title": "Take-Home_EX03",
    "section": "Clean and Wrangling nodes",
    "text": "Clean and Wrangling nodes\n\n\nCode\nmc3_nodes_cleaned &lt;- mc3_nodes %&gt;%\n  mutate(id = as.character(id)) %&gt;%\n  filter(!is.na(id)) %&gt;%\n  distinct(id, .keep_all = TRUE) %&gt;%\n  select(-thing_collected)\n\nmc3_edges_cleaned &lt;- mc3_edges %&gt;%\n  rename(from_id = source, \n         to_id = target) %&gt;%\n  mutate(across(c(from_id, to_id), as.character)) %&gt;%\n  filter(from_id %in% mc3_nodes_cleaned$id, \n         to_id %in% mc3_nodes_cleaned$id) %&gt;%\n  filter(!is.na(from_id), !is.na(to_id))\n\nnode_index_lookup &lt;- mc3_nodes_cleaned %&gt;%\n  mutate(.row_id = row_number()) %&gt;%\n  select(id, .row_id)\n\nmc3_edges_indexed &lt;- mc3_edges_cleaned %&gt;%\n  left_join(node_index_lookup, by = c(\"from_id\" = \"id\")) %&gt;%\n  rename(from = .row_id) %&gt;%\n  left_join(node_index_lookup, by = c(\"to_id\" = \"id\")) %&gt;%\n  rename(to = .row_id) %&gt;%\n  select(from, to, is_inferred, type) %&gt;%\n  filter(!is.na(from) & !is.na(to))\n\nused_node_indices &lt;- sort(unique(c(mc3_edges_indexed$from, mc3_edges_indexed$to)))\n\nmc3_nodes_final &lt;- mc3_nodes_cleaned %&gt;%\n  slice(used_node_indices) %&gt;%\n  mutate(new_index = row_number())\n\nold_to_new_index &lt;- tibble(\n  old_index = used_node_indices,\n  new_index = seq_along(used_node_indices)\n)\n\nmc3_edges_final &lt;- mc3_edges_indexed %&gt;%\n  left_join(old_to_new_index, by = c(\"from\" = \"old_index\")) %&gt;%\n  rename(from_new = new_index) %&gt;%\n  left_join(old_to_new_index, by = c(\"to\" = \"old_index\")) %&gt;%\n  rename(to_new = new_index) %&gt;%\n  select(from = from_new, to = to_new, is_inferred, type)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#entity-network-construction",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#entity-network-construction",
    "title": "Take-Home_EX03",
    "section": "Entity Network Construction",
    "text": "Entity Network Construction\n\n\nCode\n# Filter People and Vessels\nentity_nodes &lt;- mc3_nodes_final %&gt;%\n  filter(type == \"Entity\", sub_type %in% c(\"Person\", \"Vessel\")) %&gt;%\n  select(id, name, sub_type)\n\n# Assign groups\nentity_nodes &lt;- entity_nodes %&gt;%\n  mutate(\n    group = case_when(\n      name %in% c(\"Green Guardians\", \"Reef Guardian\", \"EcoVigil\", \"Sentinel\") ~ \"Environmentalism\",\n      name %in% c(\"Sailor Shift\", \"Sailor Shifts Team\") ~ \"Sailor Shift\",\n      name %in% c(\"Mariners Dream\", \"Marlin\", \"Recreational Fishing Boats\") ~ \"Fishing/Leisure\",\n      name %in% c(\"Serenity\", \"Horizon\", \"Osprey\", \"Remora\", \"Neptune\", \"Mako\") ~ \"Tourism/Leisure\",\n      name %in% c(\"Boss\", \"Mrs. Money\", \"The Middleman\") ~ \"Suspicious\",\n      TRUE ~ sub_type\n    )\n  )\n\n# Build communication pairs\nvalid_ids &lt;- entity_nodes$id\ncomm_event_ids &lt;- mc3_nodes_final %&gt;%\n  filter(type == \"Event\", sub_type == \"Communication\") %&gt;%\n  pull(id)\n\nedge_lookup &lt;- tibble(\n  index = mc3_nodes_final$new_index,\n  id = mc3_nodes_final$id\n)\n\nmc3_edges_for_events &lt;- mc3_edges_final %&gt;%\n  left_join(edge_lookup, by = c(\"from\" = \"index\")) %&gt;%\n  rename(from_id = id) %&gt;%\n  left_join(edge_lookup, by = c(\"to\" = \"index\")) %&gt;%\n  rename(to_id = id)\n\nsent_edges &lt;- mc3_edges_for_events %&gt;%\n  filter(type == \"sent\", to_id %in% comm_event_ids) %&gt;%\n  select(event_id = to_id, entity_id = from_id)\n\nreceived_edges &lt;- mc3_edges_for_events %&gt;%\n  filter(type == \"received\", from_id %in% comm_event_ids) %&gt;%\n  select(event_id = from_id, entity_id = to_id)\n\nentity_event_edges &lt;- bind_rows(sent_edges, received_edges)\n\nentity_pairs &lt;- entity_event_edges %&gt;%\n  inner_join(entity_event_edges, by = \"event_id\") %&gt;%\n  filter(entity_id.x != entity_id.y) %&gt;%\n  distinct(entity_id.x, entity_id.y) %&gt;%\n  rename(source = entity_id.x, target = entity_id.y) %&gt;%\n  filter(source %in% valid_ids & target %in% valid_ids)\n\n# Build tidygraph\ngraph_tbl &lt;- tbl_graph(nodes = entity_nodes, edges = entity_pairs, directed = FALSE)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#prepare-visualisation-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#prepare-visualisation-data",
    "title": "Take-Home_EX03",
    "section": "Prepare Visualisation data",
    "text": "Prepare Visualisation data\n\n\nCode\n# Create edges for visualization\nnode_id_map &lt;- graph_tbl %&gt;% \n  activate(nodes) %&gt;% \n  as_tibble() %&gt;% \n  mutate(node_index = row_number()) %&gt;% \n  select(node_index, id)\n\nedges_vis &lt;- graph_tbl %&gt;%\n  activate(edges) %&gt;% \n  as_tibble() %&gt;%\n  left_join(node_id_map, by = c(\"from\" = \"node_index\")) %&gt;%\n  rename(from_id = id) %&gt;%\n  left_join(node_id_map, by = c(\"to\" = \"node_index\")) %&gt;%\n  rename(to_id = id) %&gt;%\n  select(from = from_id, to = to_id)\n\n\n\n\nCode\n# Create nodes for Louvain (Best Algorithm) - ASCENDING ORDER\nnodes_vis_louvain &lt;- entity_nodes %&gt;%\n  mutate(\n    id = as.character(id),\n    label = name,\n    group = factor(louvain_cluster, levels = sort(as.numeric(unique(louvain_cluster)))),\n    shape = ifelse(sub_type == \"Person\", \"dot\", \"triangle\"),\n    title = paste0(\n      \"&lt;div style='color:white;'&gt;\",\n      \"&lt;b&gt;\", name, \"&lt;/b&gt;&lt;br&gt;\",\n      \"Type: \", sub_type, \"&lt;br&gt;\",\n      \"Louvain Cluster: \", louvain_cluster,\n      \"&lt;/div&gt;\"\n    )\n  ) %&gt;%\n  select(id, label, group, shape, title)\n\n# Create nodes for Infomap (Comparison) - ASCENDING ORDER\nnodes_vis_infomap &lt;- entity_nodes %&gt;%\n  mutate(\n    id = as.character(id),\n    label = name,\n    group = factor(infomap_cluster, levels = sort(as.numeric(unique(infomap_cluster)))), \n    shape = ifelse(sub_type == \"Person\", \"dot\", \"triangle\"),\n    title = paste0(\n      \"&lt;div style='color:white;'&gt;\",\n      \"&lt;b&gt;\", name, \"&lt;/b&gt;&lt;br&gt;\",\n      \"Type: \", sub_type, \"&lt;br&gt;\",\n      \"Infomap Cluster: \", infomap_cluster,\n      \"&lt;/div&gt;\"\n    )\n  ) %&gt;%\n  select(id, label, group, shape, title)\nprint(\"🥇 Louvain Clustering - Best Performance (Modularity: 0.359)\")\n\n\n[1] \"🥇 Louvain Clustering - Best Performance (Modularity: 0.359)\""
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#interactive-network-visualisation-louvain-vs-infomap",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#interactive-network-visualisation-louvain-vs-infomap",
    "title": "Take-Home_EX03",
    "section": "Interactive Network Visualisation (Louvain vs Infomap)",
    "text": "Interactive Network Visualisation (Louvain vs Infomap)\n\nLouvain Algorithm: Optimizes modularity using a greedy, hierarchical approach. Excellent for finding well-defined, balanced communities with clear boundaries.\nInfomap Algorithm: Uses information theory and random walks to minimize description length of information flow. Better at detecting overlapping communities and information pathways."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#section",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#section",
    "title": "Take-Home_EX03",
    "section": "",
    "text": "Code\n# Louvain Interactive Network - ORDERED DROPDOWN\n\nvis_louvain &lt;- visNetwork(nodes_vis_louvain, edges_vis, width = \"100%\", height = \"600px\") %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visNodes(font = list(size = 16)) %&gt;%\n  visEdges(color = list(color = \"rgba(150,150,150,0.3)\")) %&gt;%\n  visInteraction(\n    tooltipStyle = 'background-color: black; color: white; border-radius: 5px; padding: 8px;'\n  ) %&gt;%\n  visOptions(\n    highlightNearest = TRUE, \n    selectedBy = list(variable = \"group\", main = \"Select Cluster:\", sort = TRUE)\n  ) %&gt;%\n  visLegend(position = \"right\", main = \"Louvain Clusters (Optimal)\")\n\nvis_louvain\n\n\n\n\n\n\n\n\nCode\n# Infomap Interactive Network - ORDERED DROPDOWN\nprint(\"📊 Infomap Clustering - High Granularity (13 clusters)\")\n\n\n[1] \"📊 Infomap Clustering - High Granularity (13 clusters)\"\n\n\nCode\nvis_infomap &lt;- visNetwork(nodes_vis_infomap, edges_vis, width = \"100%\", height = \"600px\") %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visNodes(font = list(size = 16)) %&gt;%\n  visEdges(color = list(color = \"rgba(150,150,150,0.3)\")) %&gt;%\n  visInteraction(\n    tooltipStyle = 'background-color: black; color: white; border-radius: 5px; padding: 8px;'\n  ) %&gt;%\n  visOptions(\n    highlightNearest = TRUE, \n    selectedBy = list(variable = \"group\", main = \"Select Cluster:\", sort = TRUE) \n  ) %&gt;%\n  visLegend(position = \"right\", main = \"Infomap Clusters\")\n\nvis_infomap"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#algorithm-comparison-visualisation",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#algorithm-comparison-visualisation",
    "title": "Take-Home_EX03",
    "section": "Algorithm Comparison visualisation",
    "text": "Algorithm Comparison visualisation\n\n\nCode\n# Clusters comparison\np1 &lt;- ggplot(cluster_metrics, aes(x = reorder(Algorithm, Clusters), y = Clusters, fill = Algorithm)) +\n  geom_col(alpha = 0.8) +\n  geom_text(aes(label = Clusters), vjust = -0.5, size = 3, fontface = \"bold\") +\n  labs(title = \"Number of Clusters by Algorithm\", \n       x = \"Algorithm\", y = \"Number of Clusters\") +\n  theme_minimal() +\n  theme(legend.position = \"none\", axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_fill_brewer(palette = \"Set2\")\n\n# Modularity comparison\np2 &lt;- ggplot(cluster_metrics, aes(x = reorder(Algorithm, -Modularity), y = Modularity, fill = Algorithm)) +\n  geom_col(alpha = 0.8) +\n  geom_text(aes(label = round(Modularity, 3)), vjust = -0.5, size = 3, fontface = \"bold\") +\n  labs(title = \"Modularity Score by Algorithm\", \n       x = \"Algorithm\", y = \"Modularity Score\") +\n  theme_minimal() +\n  theme(legend.position = \"none\", axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_fill_brewer(palette = \"Set2\")\n\n# Combined plot\nprint(\"📈 Algorithm Performance Comparison\")\n\n\n[1] \"📈 Algorithm Performance Comparison\"\n\n\nCode\nprint(p1 + p2 + plot_layout(ncol = 2))\n\n\n\n\n\nNemo Reef maritime investigation:\n\nLouvain’s 7 clusters clearly separate legitimate operations (conservation, tourism) from suspicious activities (Boss-Mrs. Money network)\nInfomap’s 15 clusters might over-fragment, making it harder to identify major threat networks\nComparison validates that Louvain’s groupings represent genuine operational boundaries, not algorithmic artifacts"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#interative-performance",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#interative-performance",
    "title": "Take-Home_EX03",
    "section": "Interative performance",
    "text": "Interative performance\n\n\nCode\n# Create interactive performance table\ncluster_comparison &lt;- function() {\n  performance_table &lt;- cluster_metrics %&gt;%\n    arrange(desc(Modularity)) %&gt;%\n    mutate(\n      Rank = row_number(),\n      Modularity_Score = round(Modularity, 3),\n      Efficiency = case_when(\n        Modularity &gt; 0.35 ~ \"Excellent\",\n        Modularity &gt; 0.25 ~ \"Good\", \n        TRUE ~ \"Fair\"\n      )\n    )\n  \n  DT::datatable(performance_table, \n                options = list(pageLength = 10, dom = 't'),\n                caption = \"🏆 Algorithm Performance Comparison\") %&gt;%\n    DT::formatStyle(\"Efficiency\",\n      backgroundColor = DT::styleEqual(\n        c(\"Excellent\", \"Good\", \"Fair\"),\n        c(\"#d4edda\", \"#fff3cd\", \"#f8d7da\")\n      ))\n}\n\nprint(\"📋 Interactive Performance Analysis\")\n\n\n[1] \"📋 Interactive Performance Analysis\"\n\n\nCode\ncluster_comparison()\n\n\n\n\n\n\n\nPerformance Metrics:\n\nClusters: Number of communities identified by each algorithm\nModularity: Quality score measuring how well the algorithm separates communities (higher = better)\nRank: Performance ranking based on modularity scores\nEfficiency: Categorical assessment of algorithm effectiveness"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#algorithm-rankings-interpretation",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#algorithm-rankings-interpretation",
    "title": "Take-Home_EX03",
    "section": "Algorithm Rankings & Interpretation",
    "text": "Algorithm Rankings & Interpretation\n🥇 1st Place: Louvain Algorithm\n\n7 clusters, 0.359 modularity, “Excellent”\nOptimal balance between granularity and meaningful groupings\nClearly separates major stakeholder groups: conservation vessels, suspicious operations, tourism operators, city officials\nBest choice for maritime security analysis\n\n🥈 2nd Place: Edge Betweenness\n\n10 clusters, 0.342 modularity, “Good”\nIdentifies bridge connections between groups effectively\nMore fragmented than Louvain but still valuable for understanding network bottlenecks\n\n🥉 3rd Place: Walktrap\n\n7 clusters, 0.304 modularity, “Good”\nSame cluster count as Louvain but lower quality boundaries\nGood for validating Louvain results through algorithmic consistency\n\n4th Place: Spinglass\n\n4 clusters, 0.262 modularity, “Good”\nBroad groupings but may miss important sub-communities\nLimited by network’s disconnected components\n\n5th Place: Infomap\n\n15 clusters, 0.149 modularity, “Fair”\nOver-fragmentation creates too many small groups\nDifficult to interpret for practical maritime security purposes"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#key-insights",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#key-insights",
    "title": "Take-Home_EX03",
    "section": "Key Insights",
    "text": "Key Insights\nWhy Louvain Wins:\n\nHighest modularity (0.359) indicates strongest community structure detection\nOptimal 7 clusters provide clear, actionable groupings for investigation\nExcellent efficiency for identifying suspicious vs. legitimate operations\n\nDecision Support This comparison scientifically validates that Louvain clustering provides the most actionable intelligence for maritime authorities investigating potential illegal activities around Nemo Reef while maintaining clear separation between legitimate conservation efforts and suspicious operations."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03_prototype/Take-Home_Ex03_prototype.html#cluster-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex03_prototype/Take-Home_Ex03_prototype.html#cluster-analysis",
    "title": "Take-Home Exercise 3 Story Board",
    "section": "Cluster Analysis",
    "text": "Cluster Analysis\nThe dashboard presents a comparative analysis of different clustering algorithms applied to the Oceanus maritime network, aiming to uncover meaningful communities among people and vessels involved around Nemo Reef.\n\n\nSummary\n\nThe Entity Communication Network reveals that Nemo Reef operations exist within a complex ecosystem where environmental protection, legitimate tourism, and potentially suspicious activities intersect. The visualization provides maritime authorities with a strategic overview to prioritize investigations, enhance monitoring of key relationships, and protect both marine conservation efforts and legitimate maritime commerce while identifying threats to the reef’s ecological integrity.\nThe story this network tells: While legitimate conservation and tourism operations maintain their protective roles around Nemo Reef, a concerning undercurrent of potentially coordinated suspicious activities requires immediate investigative attention to preserve both maritime security and environmental protection in these critical waters."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03_prototype/Take-Home_Ex03_prototype.html#deep-dive-the-messages-tab",
    "href": "Take-Home_Ex/Take-Home_Ex03_prototype/Take-Home_Ex03_prototype.html#deep-dive-the-messages-tab",
    "title": "Take-Home Exercise 3 Story Board",
    "section": "Deep Dive: The Messages Tab",
    "text": "Deep Dive: The Messages Tab\nOnce a suspicious period is identified through the above visualizations, the messages taballows for targeted review of the actual message content exchanged during that window. This enables:\n\nDirect examination of the nature and context of communications, confirming whether the content aligns with legitimate business or hints at illicit coordination.\nIdentification of code words, unusual instructions, or references to sensitive operations.\nVerification of relationships and roles among key entities, as messages often reveal hierarchy, influence, and intent.\n\nBy correlating message content with network structure and temporal anomalies, analysts can move from pattern detection to concrete evidence gathering, supporting investigations into illegal or unethical activities."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03_prototype/Take-Home_Ex03_prototype.html#the-role-of-the-communication-network-graph",
    "href": "Take-Home_Ex/Take-Home_Ex03_prototype/Take-Home_Ex03_prototype.html#the-role-of-the-communication-network-graph",
    "title": "Take-Home Exercise 3 Story Board",
    "section": "The Role of the Communication Network Graph",
    "text": "The Role of the Communication Network Graph\n\nThe communication network graph provides a structural snapshot of the network at any selected date and time. By filtering the network to a specific window (identified as suspicious via the temporal charts), analysts can:\n\nVisualize which entities are most active or central during periods of interest.\nIdentify clusters, bridges, or unusually dense connections that may indicate coordinated groups or key facilitators.\nAssess The scale and reach of the network at critical moments, helping to distinguish between routine communication and orchestrated events.\n\nThis graph is essential for understanding not just when, but who is involved in suspicious activity, and how information or influence flows between individuals and organizations."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03_prototype/Take-Home_Ex03_prototype.html#summary",
    "href": "Take-Home_Ex/Take-Home_Ex03_prototype/Take-Home_Ex03_prototype.html#summary",
    "title": "Take-Home Exercise 3 Story Board",
    "section": "Summary",
    "text": "Summary\nThis integrated visual analytics workflow enables rapid detection of suspicious communication patterns, structural analysis of the network during critical periods, and in-depth review of message content. It streamlines the process of moving from anomaly detection to actionable intelligence, making it significantly easier to identify and confirm illegal activities and the roles of key entities involved."
  }
]