[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "I will first work through the exercise to gain a clear understanding of the data and objectives. Based on this foundation, I will then explore opportunities to apply visual analytics techniques to uncover insights and enhance data storytelling.\n\n\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, ggrepel, ggthemes, hrbrthemes, patchwork, ggtern, ggplot2)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, ggrepel, ggthemes, hrbrthemes, patchwork, ggtern, ggplot2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-comparison-class-and-subject",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-comparison-class-and-subject",
    "title": "Hands-on Exercise 2",
    "section": "Data Comparison: Class and Subject",
    "text": "Data Comparison: Class and Subject\n\nexam_data_long &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(ENGLISH, MATHS, SCIENCE), names_to = \"Subject\", values_to = \"Score\")\n\nscore_comparison_plot &lt;- ggplot(exam_data_long, aes(x = CLASS, y = Score, fill = Subject)) +\n  geom_boxplot() + \n  facet_wrap(~ Subject, scales = \"free_y\") + \n  labs(title = \"Comparison of Scores by Class and Subject\",\n       x = \"Class\", y = \"Scores\") +\n  theme_linedraw() + \n  coord_cartesian(ylim = c(0, 100)) +\n  theme(legend.position = \"top\")\n\nscore_comparison_plot"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-of-average-scores",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-of-average-scores",
    "title": "Hands-on Exercise 2",
    "section": "Density Plot of Average Scores",
    "text": "Density Plot of Average Scores\n\nexam_data$average_score &lt;- (exam_data$ENGLISH + exam_data$MATHS + exam_data$SCIENCE) / 3\n\nggplot(exam_data, aes(x = average_score)) +\n  geom_density(fill = \"blue\", alpha = 0.5) +\n  labs(title = \"Density Plot of Average Scores\", x = \"Average Score\", y = \"Density\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-by-gender",
    "title": "Hands-on Exercise 2",
    "section": "density plot by gender",
    "text": "density plot by gender\n\nggplot(exam_data, aes(x = average_score, fill = GENDER)) +\n  geom_density(alpha = 0.5) +  # alpha makes it semi-transparent\n  labs(title = \"Density Plot of Average Scores by Gender\", x = \"Average Score\", y = \"Density\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#try-out-patchwork",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#try-out-patchwork",
    "title": "Hands-on Exercise 2",
    "section": "Try out Patchwork",
    "text": "Try out Patchwork\n\nhistogram_plot &lt;- ggplot(exam_data, aes(x = ENGLISH)) + \n  geom_histogram(bins = 20, fill = \"lightblue\", color = \"black\", alpha = 0.7) + \n  labs(title = \"Distribution of English Scores\", x = \"English Score\", y = \"Frequency\") + \n  theme_minimal()\n\n# 2. Scatter plot of MATHS vs SCIENCE scores\nscatter_plot &lt;- ggplot(exam_data, aes(x = MATHS, y = SCIENCE)) + \n  geom_point(color = \"purple\") + \n  geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +\n  labs(title = \"Maths vs Science Scores\", x = \"Math Score\", y = \"Science Score\") +\n  theme_minimal()\n\n# 3. Violin plot of average scores by class\nexam_data$average_score &lt;- (exam_data$ENGLISH + exam_data$MATHS + exam_data$SCIENCE) / 3\nviolin_plot &lt;- ggplot(exam_data, aes(x = CLASS, y = average_score, fill = CLASS)) + \n  geom_violin() +\n  labs(title = \"Average Scores by Class\", x = \"Class\", y = \"Average Score\") + \n  theme_minimal()\n\n# Combine the plots using patchwork\ncombined_plot &lt;- (histogram_plot | scatter_plot) / violin_plot\n\n# Display the combined plot\ncombined_plot\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot-theme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot-theme",
    "title": "Hands-on Exercise 2",
    "section": "Beyond ggplot theme",
    "text": "Beyond ggplot theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_economist() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot-theme-1",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot-theme-1",
    "title": "Hands-on Exercise 2",
    "section": "Beyond ggplot theme",
    "text": "Beyond ggplot theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Exercise 2",
    "section": "Beyond Single Graph",
    "text": "Beyond Single Graph\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  # Replace 'size' with 'linewidth'\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\np3\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-1",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-1",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n\np1 + p2 | p3\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-2",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-2",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-3",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-3",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-4",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs-4",
    "title": "Hands-on Exercise 2",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly,patchwork, DT, tidyverse) \n\n\n\n\nexam_data &lt;- read_csv(\"chap03/data/Exam_data.csv\")\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nTo make it easier for users to identify which dot they are hovering over, we enhance the dot’s appearance by changing its size and color during hover.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \ntheme_set(theme_minimal(base_size = 14, base_family = \"Arial\"))\n\np &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = tooltip, data_id = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#2c7fb8\",        # Soft blue fill\n    color = \"white\",         # Dot border\n    alpha = 0.85\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(\n    title = \"Distribution of Maths Scores\",\n    subtitle = \"Each dot represents a student. Hover to see details.\",\n    caption = \"Source: Exam_data.csv\",\n    x = \"Maths Score\",\n    y = NULL\n  ) +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 13, hjust = 0.5),\n    axis.text.x = element_text(size = 12),\n    panel.grid.major.y = element_blank()\n  )\n\n\noptions(ggiraph.tooltip_extra_css = \"pointer-events: none;\")\n\n# Create the interactive widget\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_tooltip(css = \"color: red; font-weight: bold; background-color: #f9f9f9;\n                         border: 1px solid #ccc; padding: 6px 10px;\n                         border-radius: 6px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);\"),\n    opts_hover(css = \"fill:#f03b20;stroke:white;stroke-width:1.5px;\")\n  )\n)\n\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(RACE = fct_reorder(RACE, MATHS, .fun = mean, .desc = FALSE))\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste0(\"Mean Maths Score: \", mean, \"\\n± Standard Error: \", sem)\n}\n\ngg_point &lt;- ggplot(data = exam_data, aes(x = RACE)) +\n  stat_summary(\n    aes(y = MATHS, tooltip = after_stat(tooltip(y, ymax))),\n    fun.data = \"mean_se\",\n    geom = GeomInteractiveCol,\n    width = 0.5,\n    fill = \"lightblue\"\n  ) +\n  stat_summary(\n    aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\",\n    width = 0.2,\n    size = 0.2\n  ) +\n  scale_y_continuous(breaks = seq(0, 100, by = 10)) +\n  labs(\n    title = \"Average Maths Scores by Race\",\n    x = \"Race\",\n    y = \"Maths Score\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14)\n  )\n\ngirafe(\n  ggobj = gg_point,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_hover(css = \"fill:orange;stroke:black;stroke-width:1.5px;\"),\n    opts_tooltip(css = \"background-color:white; color:black; border:1px solid black; padding:5px; border-radius:5px;\")\n  )\n)\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nexam_data &lt;- read_csv(\"chap03/data/Exam_data.csv\")\nclass_summary &lt;- exam_data %&gt;%\n  group_by(CLASS) %&gt;%\n  summarise(\n    mean_score = round(mean(MATHS), 2),\n    min_score = min(MATHS, na.rm = TRUE),\n    max_score = max(MATHS, na.rm = TRUE),\n    count = n(),\n    .groups = \"drop\"\n)\n\n# Join the stats back to main data and add tooltip content\nexam_data &lt;- exam_data %&gt;%\n  left_join(class_summary, by = \"CLASS\") %&gt;%\n  mutate(tooltip_text = paste0(\n    \"Class: \", CLASS, \"\\n\",\n    \"Student Score: \", MATHS, \"\\n\",\n    \"Class Mean: \", mean_score, \"\\n\",\n    \"Min Score: \", min_score, \"\\n\",\n    \"Max Score: \", max_score, \"\\n\",\n    \"Count: \", count\n  ))\n\n# Dotplot with enhanced tooltip\np &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = tooltip_text, data_id = CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#1f77b4\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(\n    title = \"Distribution of Maths Scores\",\n    x = \"Maths Score\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    axis.text.x = element_text(size = 12)\n  )\n\n# Interactive rendering\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6 * 0.618,\n  options = list(\n    opts_hover(css = \"fill: #202020; stroke: white; stroke-width: 1.2px;\"),\n    opts_hover_inv(css = \"opacity: 0.15;\"),\n    opts_tooltip(css = \"background-color: white; color: black; border: 1px solid #ccc; padding: 5px; border-radius: 4px; font-size: 12px;\")\n  )\n)\n\n\n\n\n\n##3.6.7 Coordinated Multiple Views with ggiraph\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(\n    total_score = MATHS + ENGLISH + SCIENCE,\n    tooltip_text = paste0(\n      \"Maths: \", MATHS, \"\\n\",\n      \"English: \", ENGLISH, \"\\n\",\n      \"Science: \", SCIENCE, \"\\n\",\n      \"Total: \", total_score, \" / 300\"\n    )\n  )\n\n# Step 2: Maths Plot\np1 &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#1f77b4\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"Maths Score\", x = \"MATHS\") +\n  theme_minimal()\n\n# Step 3: English Plot\np2 &lt;- ggplot(data = exam_data, aes(x = ENGLISH)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#2ca02c\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"English Score\", x = \"ENGLISH\") +\n  theme_minimal()\n\n# Step 4: Science Plot\np3 &lt;- ggplot(data = exam_data, aes(x = SCIENCE)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#ff7f0e\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"Science Score\", x = \"SCIENCE\") +\n  theme_minimal()\n\n# Step 5: Combine the 3 plots vertically\ncombined_plot &lt;- p1 / p2 / p3\n\n# Step 6: Render as interactive graphic\ngirafe(\n  code = print(combined_plot),\n  width_svg = 9,\n  height_svg = 5,\n  options = list(\n    opts_hover(css = \"fill: red; stroke: black; stroke-width: 1.5px;\"),\n    opts_hover_inv(css = \"opacity: 0.2;\"),\n    opts_tooltip(css = \"background-color: white; color: black; border: 1px solid #ccc; padding: 6px; border-radius: 5px; font-size: 12px;\")\n  )\n)\n\n\n\n\n\n##3.7 Interactive Data Visualisation - plotly methods!\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(\n    TOTAL = MATHS + ENGLISH + SCIENCE,\n    tooltip_text = paste0(\n      \"Class: \", CLASS, \"&lt;br&gt;\",\n      \"Maths: \", MATHS, \"&lt;br&gt;\",\n      \"English: \", ENGLISH, \"&lt;br&gt;\",\n      \"Science: \", SCIENCE, \"&lt;br&gt;\",\n      \"Total: \", TOTAL, \" / 300\"\n    )\n  )\n\nplot_ly(\n  data = exam_data,\n  x = ~ENGLISH,\n  y = ~MATHS,\n  type = \"scatter\",\n  mode = \"markers\",\n  color = ~CLASS,\n  colors = \"Set2\",  # or try \"Paired\", \"Dark2\"\n  text = ~tooltip_text,\n  hoverinfo = \"text\",\n  marker = list(\n    size = 10,\n    opacity = 0.7,\n    line = list(width = 1, color = \"#000000\")\n  )\n) %&gt;%\n  layout(\n    title = list(text = \"English vs Maths by Class\", x = 0.05),\n    xaxis = list(title = \"English Score\", range = c(0, 100)),\n    yaxis = list(title = \"Maths Score\", range = c(0, 100)),\n    legend = list(title = list(text = \"&lt;b&gt;Class&lt;/b&gt;\"))\n  )\n\n\n\n\n\n##3.8 Interactive Data Visualisation - crosstalk methods!\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n###Try to make the table fit\n\nd &lt;- highlight_key(exam_data)\n\n# 1. Interactive ggplotly plot\np &lt;- ggplot(d, aes(ENGLISH, MATHS)) +\n  geom_point(size = 2, alpha = 0.7) +\n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_minimal()\n\ngg &lt;- highlight(ggplotly(p), \"plotly_selected\")\n\n# 2. Enhanced datatable\ndata_table &lt;- DT::datatable(\n  d,\n  options = list(\n    pageLength = 20,\n    scrollY = \"600px\",\n    autoWidth = TRUE,\n    dom = 'Bfrtip'\n  ),\n  class = \"stripe hover compact\",\n  rownames = FALSE\n)\n\n# 3. Arrange with wider proportions\ncrosstalk::bscols(\n  widths = c(5, 7),  # Give plot more breathing room\n  gg,\n  data_table\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#4 Programming Animated Statistical Graphics with R\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n##import\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"chap03/data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\n##Animated Data Visualisation: gganimate methods\n###Static bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n###Animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n##4.4 Animated Data Visualisation: plotly\n###4.4.1 Building an animated bubble plot: ggplotly() method\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n###4.4.2 Building an animated bubble plot: plot_ly() method\n\nbp &lt;- suppressWarnings({\n  globalPop %&gt;%\n    plot_ly(\n      x = ~Old, \n      y = ~Young, \n      size = ~Population, \n      color = ~Continent,\n      sizes = c(2, 100),\n      frame = ~Year, \n      text = ~Country, \n      hoverinfo = \"text\",\n      type = 'scatter',\n      mode = 'markers'\n    ) %&gt;%\n    layout(showlegend = FALSE)\n})\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"chap03/data/Exam_data.csv\")\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nTo make it easier for users to identify which dot they are hovering over, we enhance the dot’s appearance by changing its size and color during hover.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \ntheme_set(theme_minimal(base_size = 14, base_family = \"Arial\"))\n\np &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = tooltip, data_id = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#2c7fb8\",        # Soft blue fill\n    color = \"white\",         # Dot border\n    alpha = 0.85\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(\n    title = \"Distribution of Maths Scores\",\n    subtitle = \"Each dot represents a student. Hover to see details.\",\n    caption = \"Source: Exam_data.csv\",\n    x = \"Maths Score\",\n    y = NULL\n  ) +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 13, hjust = 0.5),\n    axis.text.x = element_text(size = 12),\n    panel.grid.major.y = element_blank()\n  )\n\n\noptions(ggiraph.tooltip_extra_css = \"pointer-events: none;\")\n\n# Create the interactive widget\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_tooltip(css = \"color: red; font-weight: bold; background-color: #f9f9f9;\n                         border: 1px solid #ccc; padding: 6px 10px;\n                         border-radius: 6px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);\"),\n    opts_hover(css = \"fill:#f03b20;stroke:white;stroke-width:1.5px;\")\n  )\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "tooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(RACE = fct_reorder(RACE, MATHS, .fun = mean, .desc = FALSE))\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste0(\"Mean Maths Score: \", mean, \"\\n± Standard Error: \", sem)\n}\n\ngg_point &lt;- ggplot(data = exam_data, aes(x = RACE)) +\n  stat_summary(\n    aes(y = MATHS, tooltip = after_stat(tooltip(y, ymax))),\n    fun.data = \"mean_se\",\n    geom = GeomInteractiveCol,\n    width = 0.5,\n    fill = \"lightblue\"\n  ) +\n  stat_summary(\n    aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\",\n    width = 0.2,\n    size = 0.2\n  ) +\n  scale_y_continuous(breaks = seq(0, 100, by = 10)) +\n  labs(\n    title = \"Average Maths Scores by Race\",\n    x = \"Race\",\n    y = \"Maths Score\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14)\n  )\n\ngirafe(\n  ggobj = gg_point,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_hover(css = \"fill:orange;stroke:black;stroke-width:1.5px;\"),\n    opts_tooltip(css = \"background-color:white; color:black; border:1px solid black; padding:5px; border-radius:5px;\")\n  )\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "p &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nexam_data &lt;- read_csv(\"chap03/data/Exam_data.csv\")\nclass_summary &lt;- exam_data %&gt;%\n  group_by(CLASS) %&gt;%\n  summarise(\n    mean_score = round(mean(MATHS), 2),\n    min_score = min(MATHS, na.rm = TRUE),\n    max_score = max(MATHS, na.rm = TRUE),\n    count = n(),\n    .groups = \"drop\"\n)\n\n# Join the stats back to main data and add tooltip content\nexam_data &lt;- exam_data %&gt;%\n  left_join(class_summary, by = \"CLASS\") %&gt;%\n  mutate(tooltip_text = paste0(\n    \"Class: \", CLASS, \"\\n\",\n    \"Student Score: \", MATHS, \"\\n\",\n    \"Class Mean: \", mean_score, \"\\n\",\n    \"Min Score: \", min_score, \"\\n\",\n    \"Max Score: \", max_score, \"\\n\",\n    \"Count: \", count\n  ))\n\n# Dotplot with enhanced tooltip\np &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = tooltip_text, data_id = CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#1f77b4\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(\n    title = \"Distribution of Maths Scores\",\n    x = \"Maths Score\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    axis.text.x = element_text(size = 12)\n  )\n\n# Interactive rendering\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6 * 0.618,\n  options = list(\n    opts_hover(css = \"fill: #202020; stroke: white; stroke-width: 1.2px;\"),\n    opts_hover_inv(css = \"opacity: 0.15;\"),\n    opts_tooltip(css = \"background-color: white; color: black; border: 1px solid #ccc; padding: 5px; border-radius: 4px; font-size: 12px;\")\n  )\n)\n\n\n\n\n\n##3.6.7 Coordinated Multiple Views with ggiraph\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(\n    total_score = MATHS + ENGLISH + SCIENCE,\n    tooltip_text = paste0(\n      \"Maths: \", MATHS, \"\\n\",\n      \"English: \", ENGLISH, \"\\n\",\n      \"Science: \", SCIENCE, \"\\n\",\n      \"Total: \", total_score, \" / 300\"\n    )\n  )\n\n# Step 2: Maths Plot\np1 &lt;- ggplot(data = exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#1f77b4\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"Maths Score\", x = \"MATHS\") +\n  theme_minimal()\n\n# Step 3: English Plot\np2 &lt;- ggplot(data = exam_data, aes(x = ENGLISH)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#2ca02c\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"English Score\", x = \"ENGLISH\") +\n  theme_minimal()\n\n# Step 4: Science Plot\np3 &lt;- ggplot(data = exam_data, aes(x = SCIENCE)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID, tooltip = tooltip_text),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\",\n    fill = \"#ff7f0e\",\n    color = \"white\",\n    alpha = 0.85\n  ) +\n  coord_cartesian(xlim = c(0, 100)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"Science Score\", x = \"SCIENCE\") +\n  theme_minimal()\n\n# Step 5: Combine the 3 plots vertically\ncombined_plot &lt;- p1 / p2 / p3\n\n# Step 6: Render as interactive graphic\ngirafe(\n  code = print(combined_plot),\n  width_svg = 9,\n  height_svg = 5,\n  options = list(\n    opts_hover(css = \"fill: red; stroke: black; stroke-width: 1.5px;\"),\n    opts_hover_inv(css = \"opacity: 0.2;\"),\n    opts_tooltip(css = \"background-color: white; color: black; border: 1px solid #ccc; padding: 6px; border-radius: 5px; font-size: 12px;\")\n  )\n)\n\n\n\n\n\n##3.7 Interactive Data Visualisation - plotly methods!\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\nexam_data &lt;- exam_data %&gt;%\n  mutate(\n    TOTAL = MATHS + ENGLISH + SCIENCE,\n    tooltip_text = paste0(\n      \"Class: \", CLASS, \"&lt;br&gt;\",\n      \"Maths: \", MATHS, \"&lt;br&gt;\",\n      \"English: \", ENGLISH, \"&lt;br&gt;\",\n      \"Science: \", SCIENCE, \"&lt;br&gt;\",\n      \"Total: \", TOTAL, \" / 300\"\n    )\n  )\n\nplot_ly(\n  data = exam_data,\n  x = ~ENGLISH,\n  y = ~MATHS,\n  type = \"scatter\",\n  mode = \"markers\",\n  color = ~CLASS,\n  colors = \"Set2\",  # or try \"Paired\", \"Dark2\"\n  text = ~tooltip_text,\n  hoverinfo = \"text\",\n  marker = list(\n    size = 10,\n    opacity = 0.7,\n    line = list(width = 1, color = \"#000000\")\n  )\n) %&gt;%\n  layout(\n    title = list(text = \"English vs Maths by Class\", x = 0.05),\n    xaxis = list(title = \"English Score\", range = c(0, 100)),\n    yaxis = list(title = \"Maths Score\", range = c(0, 100)),\n    legend = list(title = list(text = \"&lt;b&gt;Class&lt;/b&gt;\"))\n  )\n\n\n\n\n\n##3.8 Interactive Data Visualisation - crosstalk methods!\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n###Try to make the table fit\n\nd &lt;- highlight_key(exam_data)\n\n# 1. Interactive ggplotly plot\np &lt;- ggplot(d, aes(ENGLISH, MATHS)) +\n  geom_point(size = 2, alpha = 0.7) +\n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_minimal()\n\ngg &lt;- highlight(ggplotly(p), \"plotly_selected\")\n\n# 2. Enhanced datatable\ndata_table &lt;- DT::datatable(\n  d,\n  options = list(\n    pageLength = 20,\n    scrollY = \"600px\",\n    autoWidth = TRUE,\n    dom = 'Bfrtip'\n  ),\n  class = \"stripe hover compact\",\n  rownames = FALSE\n)\n\n# 3. Arrange with wider proportions\ncrosstalk::bscols(\n  widths = c(5, 7),  # Give plot more breathing room\n  gg,\n  data_table\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#4 Programming Animated Statistical Graphics with R\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n##import\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"chap03/data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\n##Animated Data Visualisation: gganimate methods\n###Static bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n###Animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n##4.4 Animated Data Visualisation: plotly\n###4.4.1 Building an animated bubble plot: ggplotly() method\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n###4.4.2 Building an animated bubble plot: plot_ly() method\n\nbp &lt;- suppressWarnings({\n  globalPop %&gt;%\n    plot_ly(\n      x = ~Old, \n      y = ~Young, \n      size = ~Population, \n      color = ~Continent,\n      sizes = c(2, 100),\n      frame = ~Year, \n      text = ~Country, \n      hoverinfo = \"text\",\n      type = 'scatter',\n      mode = 'markers'\n    ) %&gt;%\n    layout(showlegend = FALSE)\n})\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse)\n\n\n\n\n\nexam  &lt;- read_csv(\"chap04/data/Exam_data.csv\")\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\nEdit the code so that it will not show the warning error\n\nReplace stat(x) with after_stat(x)\nBandwidth = 2\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = after_stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 2 \n  ) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-packages",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#importing-the-data",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "exam  &lt;- read_csv(\"chap04/data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-ridgeline-graph-ggridges-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-ridgeline-graph-ggridges-method",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "ggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#varying-fill-colors-along-the-x-axis",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#varying-fill-colors-along-the-x-axis",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "Edit the code so that it will not show the warning error\n\nReplace stat(x) with after_stat(x)\nBandwidth = 2\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = after_stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 2 \n  ) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plots-with-quantile-lines",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plots-with-quantile-lines",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "ggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plots-with-quantile-lines-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#ridgeline-plots-with-quantile-lines-1",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "ggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "ggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#load-package",
    "title": "Hands-on Exercise 4",
    "section": "Load Package",
    "text": "Load Package\n\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on Exercise 4",
    "section": "Significant Test of Correlation: ggscatterstats()",
    "text": "Significant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on Exercise 4",
    "section": "Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "Significant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-on Exercise 4",
    "section": "Plotting standard error bars of point estimates",
    "text": "Plotting standard error bars of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-on Exercise 4",
    "section": "Plotting confidence interval of point estimates",
    "text": "Plotting confidence interval of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "Visualizing the uncertainty of point estimates with interactive error bars\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"90%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications.\nIn this website, you will find my coursework prepared for this course"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take-Home_Ex01",
    "section": "",
    "text": "As the graphical editor of a media company, I have been tasked to design up to three impactful data visualisations to support an article on Singapore’s resident population as of June 2024.\nThe aim is to help readers quickly understand demographic trends using clear and accessible visuals based on official statistics.\n\n\nDepartment of Statistics Singapore (DOS): Planning Area and Subzone, Single Year of Age (0–100+), Sex (Male, Female, Total), Resident Population counts (as of June 2024)\n\n\n\n\nRelevance: Support editorial narratives (e.g. ageing population, regional differences)\nClarity: Easy for general readers to understand\nCompactness: Limited to a maximum of three charts"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#editorial-brief-visualising-singapores-resident-population-2024",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#editorial-brief-visualising-singapores-resident-population-2024",
    "title": "Take-Home_Ex01",
    "section": "",
    "text": "As the graphical editor of a media company, I have been tasked to design up to three impactful data visualisations to support an article on Singapore’s resident population as of June 2024.\nThe aim is to help readers quickly understand demographic trends using clear and accessible visuals based on official statistics.\n\n\nDepartment of Statistics Singapore (DOS): Planning Area and Subzone, Single Year of Age (0–100+), Sex (Male, Female, Total), Resident Population counts (as of June 2024)\n\n\n\n\nRelevance: Support editorial narratives (e.g. ageing population, regional differences)\nClarity: Easy for general readers to understand\nCompactness: Limited to a maximum of three charts"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-preparation-summary",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-preparation-summary",
    "title": "Take-Home_Ex01",
    "section": "Data Preparation Summary",
    "text": "Data Preparation Summary\n\nCleaned and filtered for relevant fields (Age, Sex, Planning Area)\nConverted columns to numeric where needed (e.g. Age, Population)\nAggregated by region and demographic groups for visual storytelling\n\n\nData Cleaning Summary\nTo prepare the dataset for visualisation, the following data cleaning steps were applied:\n\nSkipped Metadata Rows\nThe original Excel file contained header and metadata rows. We used skiprows = 2 to access only the actual data records.\nDropped Incomplete Rows\nRemoved rows where any key fields were missing:\n\nSubzone\nAge\nSex\nPopulation (2024)\nThis ensures only valid, complete records are included in the analysis.\n\nRenamed Columns for Clarity\nReplaced generic or auto-generated column names (e.g., Unnamed: x, 2024) with:\n\nPlanning Area, Subzone, Age, Sex, Population\n\nConverted to Numeric Types\nConverted the Age and Population columns to numeric using coercion.\nNon-numeric values were turned into NA and filtered out.\nRemoved Rows with Missing Age or Population\nAny rows with missing (NA) values in Age or Population were dropped after conversion."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-parameters-and-description",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-parameters-and-description",
    "title": "Take-Home_Ex01",
    "section": "Data Parameters and Description",
    "text": "Data Parameters and Description\n\n\n\n\n\n\n\nField Name\nField Description\n\n\n\n\nPlanning Area\nAdministrative regions in Singapore (e.g. Bedok, Ang Mo Kio, Tampines, etc.)\n\n\nSubzone\nSubdivisions within each Planning Area\n\n\nAge\nAge of residents in single years (0 to 100+)\n\n\nSex\nGender category: Male, Female, or Total\n\n\nPopulation\nNumber of residents for the given demographic group in June 2024"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#load-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#load-packages",
    "title": "Take-Home_Ex01",
    "section": "Load packages",
    "text": "Load packages\nWe begin by loading all required R packages using the pacman::p_load() function. These packages support data wrangling, visualisation, animation, and layout composition for this take-home exercise.\n\ntidyverse: Core set of packages for data manipulation, transformation, and visualisation using ggplot2.\nreadxl: To import Excel files (.xlsx), such as the population dataset used in this exercise.\nhaven: Enables importing datasets from software like SPSS, SAS, and Stata.\nggrepel: Prevents overlapping text labels in ggplot2 plots, improving readability.\nggthemes: Provides additional ggplot2 themes for publication-quality charts.\npatchwork: Combines multiple ggplot2 plots into a single composite layout.\nggridges: Creates ridgeline plots to visualise distributions across categories.\nggdist: Supports visualisations of distributions and uncertainty (e.g. dot + interval plots).\nscales: Useful for formatting axis labels (e.g. commas, percentages, date breaks).\nplotly: Adds interactivity to static plots made with ggplot2, enabling zoom, hover, etc.\ngganimate: Enables animation of ggplot2 plots across time or other variables.\ngifski: Required by gganimate to render animations into GIF format.\ngapminder: A sample dataset often used for animated population plots and trend visualisation.\n\n\npacman::p_load(tidyverse, readxl, haven, ggrepel, \nggthemes, patchwork, ggridges, ggdist, scales, plotly, \ngganimate, gifski, gapminder)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#import-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#import-data",
    "title": "Take-Home_Ex01",
    "section": "Import Data",
    "text": "Import Data\n\npop_data &lt;- read_csv(\"TH01/data/cleaned_population_2024.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-1-insights",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-1-insights",
    "title": "Take-Home_Ex01",
    "section": "EDA 1 Insights",
    "text": "EDA 1 Insights\nThe following insights were derived from two visualizations:\n1. A population pyramid by individual age\n2. A segmented pyramid grouped by age stages\nBalanced Gender Counts in Ages 0–19\n- Both the individual and grouped charts show that male and female populations are nearly equal from age 0 to 19\n- This includes the “Children (0–12)” and “Teenagers (13–19)” segments\n- The bars are symmetrical for both sexes, indicating no gender disparity in the younger cohorts\nLargest Population in Middle-aged Adults (40–64)\n- The “Middle-aged Adults (40–64)” age group is the most populous, with the widest stacked bar\n- This observation holds true in both visualizations\nGreater Female Presence in Elderly (65+)\n- In the individual age plot, females outnumber males starting around age 70\n- The difference becomes increasingly prominent in the 80 to 100+ range\n- This is reinforced in the grouped pyramid where the “Elderly (65+)” bar is longer for females\nSmaller Cohorts in Youth (Ages 0–19)\n- The “Children (0–12)” and “Teenagers (13–19)” groups have the shortest bars\n- This reflects a shrinking young population, as seen in the narrow base of the age-specific pyramid"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-2-insights",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-2-insights",
    "title": "Take-Home_Ex01",
    "section": "EDA 2 Insights",
    "text": "EDA 2 Insights\n\nBedok, Tampines, and Jurong West Appear in Both Rankings\nThese three planning areas rank in the top 10 for both total population and elderly population (65+), indicating they are high-density towns with large absolute numbers of seniors.\nCentral Area Ranks High in Total Population but Not in Elderly Count\nWhile the Central Area appears in the total population chart, it is absent from the elderly chart, suggesting a lower proportion of elderly residents — possibly due to its mixed commercial-residential nature.\nAng Mo Kio and Bukit Merah Appear Only in the Elderly Ranking\nThese areas do not rank among the top 10 in total population but have high elderly counts, implying a relatively older resident base compared to newer towns.\nWoodlands and Sengkang Rank High in Total but Not Elderly Population\nThese towns appear in the total population top 10 but are absent in the elderly top 10, indicating a younger demographic composition.\nElderly Population Distribution is More Uniform\nCompared to the total population, the elderly population values are closer in range, suggesting a more even spread of seniors across the top-ranked areas."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-3-insights",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#eda-3-insights",
    "title": "Take-Home_Ex01",
    "section": "EDA 3 Insights",
    "text": "EDA 3 Insights\n\nHigher Elderly Proportions\nPlanning areas such as Outram, Bukit Merah, and Ang Mo Kio have visibly higher proportions of residents aged 65 and above.\nYounger Population Profiles\nAreas like Punggol, Sembawang, and Tengah show larger proportions of Children (0–12) and Young Adults (20–39), with smaller Elderly segments.\nMiddle-aged Adults Dominate Most Areas\nThe 40–64 age group forms the largest proportion in most planning areas, indicating a dominant working-age population.\n“Total” Row Reflects National Age Structure\nThe bar labeled “Total” reflects the overall distribution of age groups across all planning areas and serves as a baseline for comparison.\nSmaller Young Dependent Segments\nIn most planning areas, Children and Teenagers together constitute less than 25% of the population.\nBalanced Age Distribution in Selected Areas\nSome areas such as Jurong West and Woodlands display relatively balanced proportions across all five age groups."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "title": "Hands-on Exercise 4",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\npacman::p_load(gganimate, ragg, ungeviz)\n\n\n# anim &lt;- ggplot(data = exam, \n#        aes(x = factor(RACE), y = MATHS)) +\n#   geom_point(position = position_jitter(height = 0.3, width = 0.05), \n#              size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n#   geom_hpline(data = sampler(25, group = RACE), \n#               height = 0.6, color = \"#D55E00\") +\n#   theme_bw() + \n#   transition_states(.draw, transition_length = 1, state_length = 3)\n# \n# animate(anim, width = 600, height = 400, renderer = magick_renderer())\n# anim_save(\"chap04/images/math_scores.gif\", animation = last_animation())\n\n\n\n\nMath Scores Animation"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-1",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods: Makeover 1",
    "text": "FunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods-makeover-2",
    "title": "Hands-on Exercise 4",
    "section": "FunnelPlotR methods: Makeover 2",
    "text": "FunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative \n  Total Number of COVID-19 Positive Cases\",    \n  x_label = \"Cumulative COVID-19 Positive Cases\", \n  y_label = \"Cumulative Fatality Rate\"  \n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "title": "Hands-on Exercise 4",
    "section": "Computing the basic derived fields",
    "text": "Computing the basic derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on Exercise 4",
    "section": "Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "Calculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "title": "Hands-on Exercise 4",
    "section": "Plotting a static funnel plot",
    "text": "Plotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on Exercise 4",
    "section": "Interactive Funnel Plot: plotly + ggplot2",
    "text": "Interactive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  }
]